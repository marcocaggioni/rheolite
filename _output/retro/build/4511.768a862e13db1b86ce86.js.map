{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/services/lib/kernel/serialize.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/async-mutex/index.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/localforage/dist/localforage.js"],"names":["Object","defineProperty","exports","value","serialize","deserialize","data","JSON","parse","buf","DataView","nbufs","getUint32","offsets","Error","i","push","jsonBytes","Uint8Array","slice","msg","TextDecoder","decode","buffers","start","stop","byteLength","deserializeBinary","_a","length","encoder","TextEncoder","origBuffers","undefined","jsonUtf8","encode","stringify","buffer","b","ArrayBuffer","isView","msgBuf","view","setUint32","set","serializeBinary","E_CANCELED","Semaphore","constructor","_maxConcurrency","_cancelError","this","_queue","_value","acquire","locked","isLocked","ticketPromise","Promise","resolve","reject","_dispatch","runExclusive","callback","thisArg","_arguments","generator","release","P","fulfilled","step","next","e","rejected","result","done","then","apply","_currentReleaser","releaser","cancel","forEach","ticket","nextTicket","shift","released","Mutex","cancelError","_semaphore","module","t","n","r","s","o","u","f","code","l","call","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","task","g","self","window","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","getThen","obj","arguments","thenable","onError","onSuccess","tryCatch","status","out","prototype","error","reason","all","iterable","toString","values","Array","resolved","allResolver","outValue","race","response","_typeof","Symbol","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","parts","properties","Blob","name","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","arr","charCodeAt","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","match","matchedEdge","parseInt","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","forages","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","mode","retries","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","options","ready","initPromises","ignoreErrors","j","_defaultConfig","k","_support","isSafari","openDatabase","test","platform","hasFetch","fetch","indexOf","IDBKeyRange","isIndexedDBValid","iterate","req","openCursor","iterationNumber","cursor","getItem","get","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","target","readAsBinaryString","store","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","dbPromise","deleteObjectStore","_forage2","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","bytes","bufferToString","base64String","substring","localforageSerializer","valueType","marker","fileReader","onload","str","readAsArrayBuffer","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","_setItem","retriesLeft","originalValue","serializer","sqlError","QUOTA_ERR","getAllStoreNames","storeNames","item","webSQLStorage","dbInfoPromise","description","size","c","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorageTestKey","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","includes","array","searchElement","x","y","isNaN","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","localforage_js","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance"],"mappings":";iIAGAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,UAAYF,EAAQG,iBAAc,EAiB1CH,EAAQG,YAVR,SAAqBC,GACjB,IAAIH,EAOJ,OALIA,EADgB,iBAATG,EACCC,KAAKC,MAAMF,GA8B3B,SAA2BG,GACvB,MAAMH,EAAO,IAAII,SAASD,GAEpBE,EAAQL,EAAKM,UAAU,GACvBC,EAAU,GAChB,GAAIF,EAAQ,EACR,MAAM,IAAIG,MAAM,mCAEpB,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAOI,IACxBF,EAAQG,KAAKV,EAAKM,UAAc,EAAJG,IAEhC,MAAME,EAAY,IAAIC,WAAWT,EAAIU,MAAMN,EAAQ,GAAIA,EAAQ,KACzDO,EAAMb,KAAKC,MAAM,IAAIa,YAAY,QAAQC,OAAOL,IAEtDG,EAAIG,QAAU,GACd,IAAK,IAAIR,EAAI,EAAGA,EAAIJ,EAAOI,IAAK,CAC5B,MAAMS,EAAQX,EAAQE,GAChBU,EAAOZ,EAAQE,EAAI,IAAMN,EAAIiB,WACnCN,EAAIG,QAAQP,KAAK,IAAIN,SAASD,EAAIU,MAAMK,EAAOC,KAEnD,OAAOL,EA/CKO,CAAkBrB,GAEvBH,GAqBXD,EAAQE,UAXR,SAAmBgB,GACf,IAAIQ,EACJ,IAAIzB,EAOJ,OALIA,GADuB,QAAtByB,EAAKR,EAAIG,eAA4B,IAAPK,OAAgB,EAASA,EAAGC,QAuCnE,SAAyBT,GACrB,MAAMP,EAAU,GACVU,EAAU,GACVO,EAAU,IAAIC,YACpB,IAAIC,EAAc,QACEC,IAAhBb,EAAIG,UACJS,EAAcZ,EAAIG,eACXH,EAAa,SAExB,MAAMc,EAAWJ,EAAQK,OAAO5B,KAAK6B,UAAUhB,IAC/CG,EAAQP,KAAKkB,EAASG,QACtB,IAAK,IAAItB,EAAI,EAAGA,EAAIiB,EAAYH,OAAQd,IAAK,CAGzC,MAAMuB,EAAIN,EAAYjB,GACtBQ,EAAQP,KAAKuB,YAAYC,OAAOF,GAAKA,EAAED,OAASC,GAEpD,MAAM3B,EAAQY,EAAQM,OACtBhB,EAAQG,KAAK,GAAKL,EAAQ,IAC1B,IAAK,IAAII,EAAI,EAAGA,EAAI,EAAIQ,EAAQM,OAAQd,IACpCF,EAAQG,KAAKH,EAAQA,EAAQgB,OAAS,GAAKN,EAAQR,GAAGW,YAE1D,MAAMe,EAAS,IAAIvB,WAAWL,EAAQA,EAAQgB,OAAS,GAAKN,EAAQA,EAAQM,OAAS,GAAGH,YAElFgB,EAAO,IAAIhC,SAAS+B,EAAOJ,QAEjCK,EAAKC,UAAU,EAAGhC,GAElB,IAAK,IAAII,EAAI,EAAGA,EAAIF,EAAQgB,OAAQd,IAChC2B,EAAKC,UAAU,GAAK5B,EAAI,GAAIF,EAAQE,IAGxC,IAAK,IAAIA,EAAI,EAAGA,EAAIQ,EAAQM,OAAQd,IAChC0B,EAAOG,IAAI,IAAI1B,WAAWK,EAAQR,IAAKF,EAAQE,IAEnD,OAAO0B,EAAOJ,OAzEFQ,CAAgBzB,GAGhBb,KAAK6B,UAAUhB,GAEpBjB,I,8CCtCO,IAAIW,MAAM,uDACH,IAAIA,MAAM,wBADnC,MAEMgC,EAAa,IAAIhC,MAAM,6BAW7B,MAAMiC,EACFC,YAAYC,EAAiBC,EAAeJ,GAIxC,GAHAK,KAAKF,gBAAkBA,EACvBE,KAAKD,aAAeA,EACpBC,KAAKC,OAAS,GACVH,GAAmB,EACnB,MAAM,IAAInC,MAAM,qDAEpBqC,KAAKE,OAASJ,EAElBK,UACI,MAAMC,EAASJ,KAAKK,WACdC,EAAgB,IAAIC,SAAQ,CAACC,EAASC,IAAWT,KAAKC,OAAOpC,KAAK,CAAE2C,UAASC,aAGnF,OAFKL,GACDJ,KAAKU,YACFJ,EAEXK,aAAaC,GACT,OA3BwDC,EA2BvCb,KA3BgDc,OA2B1C,EA3ByDC,EA2BzC,YACnC,MAAO/D,EAAOgE,SAAiBhB,KAAKG,UACpC,IACI,aAAaS,EAAS5D,GAE1B,QACIgE,MA/BL,KAF0EC,OA2B9C,KAzBjBA,EAAIV,WAAU,SAAUC,EAASC,GAC/C,SAASS,EAAUlE,GAAS,IAAMmE,EAAKJ,EAAUK,KAAKpE,IAAW,MAAOqE,GAAKZ,EAAOY,IACpF,SAASC,EAAStE,GAAS,IAAMmE,EAAKJ,EAAiB,MAAE/D,IAAW,MAAOqE,GAAKZ,EAAOY,IACvF,SAASF,EAAKI,GAJlB,IAAevE,EAIauE,EAAOC,KAAOhB,EAAQe,EAAOvE,QAJ1CA,EAIyDuE,EAAOvE,MAJhDA,aAAiBiE,EAAIjE,EAAQ,IAAIiE,GAAE,SAAUT,GAAWA,EAAQxD,OAITyE,KAAKP,EAAWI,GAClGH,GAAMJ,EAAYA,EAAUW,MAAMb,EAASC,GAAc,KAAKM,WANhB,IAAUP,EAASC,EAAYG,EAAGF,EAqCpFV,WACI,OAAOL,KAAKE,QAAU,EAG1Bc,UACI,GAAIhB,KAAKF,gBAAkB,EACvB,MAAM,IAAInC,MAAM,qHAEpB,GAAIqC,KAAK2B,iBAAkB,CACvB,MAAMC,EAAW5B,KAAK2B,iBACtB3B,KAAK2B,sBAAmB7C,EACxB8C,KAGRC,SACI7B,KAAKC,OAAO6B,SAASC,GAAWA,EAAOtB,OAAOT,KAAKD,gBACnDC,KAAKC,OAAS,GAElBS,YACI,MAAMsB,EAAahC,KAAKC,OAAOgC,QAC/B,IAAKD,EACD,OACJ,IAAIE,GAAW,EACflC,KAAK2B,iBAAmB,KAChBO,IAEJA,GAAW,EACXlC,KAAKE,SACLF,KAAKU,cAETsB,EAAWxB,QAAQ,CAACR,KAAKE,SAAUF,KAAK2B,oBAahD,MAAMQ,EACFtC,YAAYuC,GACRpC,KAAKqC,WAAa,IAAIzC,EAAU,EAAGwC,GAEvCjC,UACI,OAd0DU,EAcvCb,KAdgDc,OAc1C,EAdyDC,EAczC,YACrC,MAAO,CAAEa,SAAkB5B,KAAKqC,WAAWlC,UAC3C,OAAOyB,GAdR,KAF4EX,OAc9C,KAZnBA,EAAIV,WAAU,SAAUC,EAASC,GAC/C,SAASS,EAAUlE,GAAS,IAAMmE,EAAKJ,EAAUK,KAAKpE,IAAW,MAAOqE,GAAKZ,EAAOY,IACpF,SAASC,EAAStE,GAAS,IAAMmE,EAAKJ,EAAiB,MAAE/D,IAAW,MAAOqE,GAAKZ,EAAOY,IACvF,SAASF,EAAKI,GAJlB,IAAevE,EAIauE,EAAOC,KAAOhB,EAAQe,EAAOvE,QAJ1CA,EAIyDuE,EAAOvE,MAJhDA,aAAiBiE,EAAIjE,EAAQ,IAAIiE,GAAE,SAAUT,GAAWA,EAAQxD,OAITyE,KAAKP,EAAWI,GAClGH,GAAMJ,EAAYA,EAAUW,MAAMb,EAASC,GAAc,KAAKM,WANd,IAAUP,EAASC,EAAYG,EAAGF,EAmBtFJ,aAAaC,GACT,OAAOZ,KAAKqC,WAAW1B,cAAa,IAAMC,MAE9CP,WACI,OAAOL,KAAKqC,WAAWhC,WAG3BW,UACIhB,KAAKqC,WAAWrB,UAEpBa,SACI,OAAO7B,KAAKqC,WAAWR,Y,gBCnGyCS,EAAOvF,QAAoS,SAAUsE,EAAEkB,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAmE,GAAG/E,EAAE,OAAOA,EAAE+E,GAAE,GAAI,IAAIE,EAAE,IAAIlF,MAAM,uBAAuBgF,EAAE,KAAK,MAAOE,EAAEC,KAAK,mBAAoBD,EAAG,IAAIE,EAAEP,EAAEG,GAAG,CAAC5F,QAAQ,IAAIwF,EAAEI,GAAG,GAAGK,KAAKD,EAAEhG,SAAQ,SAASsE,GAAoB,OAAOqB,EAAlBH,EAAEI,GAAG,GAAGtB,IAAgBA,KAAI0B,EAAEA,EAAEhG,QAAQsE,EAAEkB,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAG5F,QAAkD,IAA1C,IAAIa,OAAE,EAA4C+E,EAAE,EAAEA,EAAEF,EAAE/D,OAAOiE,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA1b,CAA8b,CAAC,EAAE,CAAC,SAASO,EAAQX,EAAOvF,IAC70B,SAAWmG,GACX,aACA,IAEIC,EAyCAC,EA3CAC,EAAWH,EAAOI,kBAAoBJ,EAAOK,uBAK/C,GAAIF,EAAU,CACZ,IAAIG,EAAS,EACTC,EAAW,IAAIJ,EAASK,GACxBC,EAAUT,EAAOU,SAASC,eAAe,IAC7CJ,EAASK,QAAQH,EAAS,CACxBI,eAAe,IAEjBZ,EAAgB,WACdQ,EAAQxG,KAAQqG,IAAWA,EAAS,QAEjC,GAAKN,EAAOc,mBAAiD,IAA1Bd,EAAOe,eAO/Cd,EADS,aAAcD,GAAU,uBAAwBA,EAAOU,SAASM,cAAc,UACvE,WAId,IAAIC,EAAWjB,EAAOU,SAASM,cAAc,UAC7CC,EAASC,mBAAqB,WAC5BV,IAEAS,EAASC,mBAAqB,KAC9BD,EAASE,WAAWC,YAAYH,GAChCA,EAAW,MAEbjB,EAAOU,SAASW,gBAAgBC,YAAYL,IAG9B,WACdM,WAAWf,EAAU,QAvBwD,CAC/E,IAAIgB,EAAU,IAAIxB,EAAOe,eACzBS,EAAQC,MAAMC,UAAYlB,EAC1BP,EAAgB,WACduB,EAAQG,MAAMC,YAAY,IAyBhC,IAAIC,EAAQ,GAEZ,SAASrB,IAEP,IAAI9F,EAAGoH,EADP5B,GAAW,EAGX,IADA,IAAI6B,EAAMF,EAAMrG,OACTuG,GAAK,CAIV,IAHAD,EAAWD,EACXA,EAAQ,GACRnH,GAAK,IACIA,EAAIqH,GACXD,EAASpH,KAEXqH,EAAMF,EAAMrG,OAEd0E,GAAW,EAGbd,EAAOvF,QACP,SAAmBmI,GACQ,IAArBH,EAAMlH,KAAKqH,IAAgB9B,GAC7BD,OAIDH,KAAKhD,UAAuB,IAAX,EAAAmF,EAAyB,EAAAA,EAAyB,oBAATC,KAAuBA,KAAyB,oBAAXC,OAAyBA,OAAS,KAClI,IAAI,EAAE,CAAC,SAASpC,EAAQX,EAAOvF,GACjC,aACA,IAAIuI,EAAYrC,EAAQ,GAGxB,SAASsC,KAET,IAAIC,EAAW,GAEXC,EAAW,CAAC,YACZC,EAAY,CAAC,aACbC,EAAU,CAAC,WAIf,SAASpF,EAAQqF,GACf,GAAwB,mBAAbA,EACT,MAAM,IAAIC,UAAU,+BAEtB7F,KAAK8F,MAAQH,EACb3F,KAAK+E,MAAQ,GACb/E,KAAK+F,aAAU,EACXH,IAAaL,GACfS,EAAsBhG,KAAM4F,GAsBhC,SAASK,EAAUC,EAASC,EAAaC,GACvCpG,KAAKkG,QAAUA,EACY,mBAAhBC,IACTnG,KAAKmG,YAAcA,EACnBnG,KAAKqG,cAAgBrG,KAAKsG,oBAEF,mBAAfF,IACTpG,KAAKoG,WAAaA,EAClBpG,KAAKuG,aAAevG,KAAKwG,mBAgB7B,SAASC,EAAOP,EAASQ,EAAM1J,GAC7BsI,GAAU,WACR,IAAIqB,EACJ,IACEA,EAAcD,EAAK1J,GACnB,MAAOqE,GACP,OAAOmE,EAAS/E,OAAOyF,EAAS7E,GAE9BsF,IAAgBT,EAClBV,EAAS/E,OAAOyF,EAAS,IAAIL,UAAU,uCAEvCL,EAAShF,QAAQ0F,EAASS,MAoChC,SAASC,EAAQC,GAEf,IAAIpF,EAAOoF,GAAOA,EAAIpF,KACtB,GAAIoF,IAAuB,iBAARA,GAAmC,mBAARA,IAAuC,mBAATpF,EAC1E,OAAO,WACLA,EAAKC,MAAMmF,EAAKC,YAKtB,SAASd,EAAsBZ,EAAM2B,GAEnC,IAAIvD,GAAS,EACb,SAASwD,EAAQhK,GACXwG,IAGJA,GAAS,EACTgC,EAAS/E,OAAO2E,EAAMpI,IAGxB,SAASiK,EAAUjK,GACbwG,IAGJA,GAAS,EACTgC,EAAShF,QAAQ4E,EAAMpI,IAOzB,IAAIuE,EAAS2F,GAJb,WACEH,EAASE,EAAWD,MAIA,UAAlBzF,EAAO4F,QACTH,EAAQzF,EAAOvE,OAInB,SAASkK,EAASR,EAAM1J,GACtB,IAAIoK,EAAM,GACV,IACEA,EAAIpK,MAAQ0J,EAAK1J,GACjBoK,EAAID,OAAS,UACb,MAAO9F,GACP+F,EAAID,OAAS,QACbC,EAAIpK,MAAQqE,EAEd,OAAO+F,EAvJT9E,EAAOvF,QAAUwD,EAcjBA,EAAQ8G,UAAiB,MAAI,SAAUjB,GACrC,OAAOpG,KAAKyB,KAAK,KAAM2E,IAEzB7F,EAAQ8G,UAAU5F,KAAO,SAAU0E,EAAaC,GAC9C,GAA2B,mBAAhBD,GAA8BnG,KAAK8F,QAAUJ,GAChC,mBAAfU,GAA6BpG,KAAK8F,QAAUL,EACnD,OAAOzF,KAET,IAAIkG,EAAU,IAAIlG,KAAKH,YAAY0F,GAQnC,OAPIvF,KAAK8F,QAAUH,EAEjBc,EAAOP,EADQlG,KAAK8F,QAAUJ,EAAYS,EAAcC,EAC9BpG,KAAK+F,SAE/B/F,KAAK+E,MAAMlH,KAAK,IAAIoI,EAAUC,EAASC,EAAaC,IAG/CF,GAaTD,EAAUoB,UAAUhB,cAAgB,SAAUrJ,GAC5CwI,EAAShF,QAAQR,KAAKkG,QAASlJ,IAEjCiJ,EAAUoB,UAAUf,mBAAqB,SAAUtJ,GACjDyJ,EAAOzG,KAAKkG,QAASlG,KAAKmG,YAAanJ,IAEzCiJ,EAAUoB,UAAUd,aAAe,SAAUvJ,GAC3CwI,EAAS/E,OAAOT,KAAKkG,QAASlJ,IAEhCiJ,EAAUoB,UAAUb,kBAAoB,SAAUxJ,GAChDyJ,EAAOzG,KAAKkG,QAASlG,KAAKoG,WAAYpJ,IAmBxCwI,EAAShF,QAAU,SAAU4E,EAAMpI,GACjC,IAAIuE,EAAS2F,EAASN,EAAS5J,GAC/B,GAAsB,UAAlBuE,EAAO4F,OACT,OAAO3B,EAAS/E,OAAO2E,EAAM7D,EAAOvE,OAEtC,IAAI+J,EAAWxF,EAAOvE,MAEtB,GAAI+J,EACFf,EAAsBZ,EAAM2B,OACvB,CACL3B,EAAKU,MAAQJ,EACbN,EAAKW,QAAU/I,EAGf,IAFA,IAAIY,GAAK,EACLqH,EAAMG,EAAKL,MAAMrG,SACZd,EAAIqH,GACXG,EAAKL,MAAMnH,GAAGyI,cAAcrJ,GAGhC,OAAOoI,GAETI,EAAS/E,OAAS,SAAU2E,EAAMkC,GAChClC,EAAKU,MAAQL,EACbL,EAAKW,QAAUuB,EAGf,IAFA,IAAI1J,GAAK,EACLqH,EAAMG,EAAKL,MAAMrG,SACZd,EAAIqH,GACXG,EAAKL,MAAMnH,GAAG2I,aAAae,GAE7B,OAAOlC,GAsDT7E,EAAQC,QACR,SAAiBxD,GACf,OAAIA,aAAiBgD,KACZhD,EAEFwI,EAAShF,QAAQ,IAAIR,KAAKuF,GAAWvI,IAG9CuD,EAAQE,OACR,SAAgB8G,GACd,IAAIrB,EAAU,IAAIlG,KAAKuF,GACvB,OAAOC,EAAS/E,OAAOyF,EAASqB,IAGlChH,EAAQiH,IACR,SAAaC,GACX,IAAIrC,EAAOpF,KACX,GAAiD,mBAA7CnD,OAAOwK,UAAUK,SAAS1E,KAAKyE,GACjC,OAAOzH,KAAKS,OAAO,IAAIoF,UAAU,qBAGnC,IAAIZ,EAAMwC,EAAS/I,OACf8E,GAAS,EACb,IAAKyB,EACH,OAAOjF,KAAKQ,QAAQ,IAQtB,IALA,IAAImH,EAAS,IAAIC,MAAM3C,GACnB4C,EAAW,EACXjK,GAAK,EACLsI,EAAU,IAAIlG,KAAKuF,KAEd3H,EAAIqH,GACX6C,EAAYL,EAAS7J,GAAIA,GAE3B,OAAOsI,EACP,SAAS4B,EAAY9K,EAAOY,GAC1BwH,EAAK5E,QAAQxD,GAAOyE,MAMpB,SAAwBsG,GACtBJ,EAAO/J,GAAKmK,IACNF,IAAa5C,GAAQzB,IACzBA,GAAS,EACTgC,EAAShF,QAAQ0F,EAASyB,OAVW,SAAUL,GAC5C9D,IACHA,GAAS,EACTgC,EAAS/E,OAAOyF,EAASoB,SAajC/G,EAAQyH,KACR,SAAcP,GACZ,IAAIrC,EAAOpF,KACX,GAAiD,mBAA7CnD,OAAOwK,UAAUK,SAAS1E,KAAKyE,GACjC,OAAOzH,KAAKS,OAAO,IAAIoF,UAAU,qBAGnC,IAakB7I,EAbdiI,EAAMwC,EAAS/I,OACf8E,GAAS,EACb,IAAKyB,EACH,OAAOjF,KAAKQ,QAAQ,IAMtB,IAHA,IAAI5C,GAAK,EACLsI,EAAU,IAAIlG,KAAKuF,KAEd3H,EAAIqH,GAIKjI,EAHPyK,EAAS7J,GAIlBwH,EAAK5E,QAAQxD,GAAOyE,MAAK,SAAUwG,GAC5BzE,IACHA,GAAS,EACTgC,EAAShF,QAAQ0F,EAAS+B,OAE3B,SAAUX,GACN9D,IACHA,GAAS,EACTgC,EAAS/E,OAAOyF,EAASoB,OAV/B,OAAOpB,IAgBP,CAAC,EAAI,IAAI,EAAE,CAAC,SAASjD,EAAQX,EAAOvF,IACtC,SAAWmG,GACX,aAC8B,mBAAnBA,EAAO3C,UAChB2C,EAAO3C,QAAU0C,EAAQ,MAGxBD,KAAKhD,UAAuB,IAAX,EAAAmF,EAAyB,EAAAA,EAAyB,oBAATC,KAAuBA,KAAyB,oBAAXC,OAAyBA,OAAS,KAClI,CAAC,EAAI,IAAI,EAAE,CAAC,SAASpC,EAAQX,EAAOvF,GACtC,aAEA,IAAImL,EAA4B,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAwB,SAAUvB,GAAO,cAAcA,GAAS,SAAUA,GAAO,OAAOA,GAAyB,mBAAXsB,QAAyBtB,EAAIhH,cAAgBsI,QAAUtB,IAAQsB,OAAOd,UAAY,gBAAkBR,GA2BtQ,IAAIwB,EAvBJ,WAEI,IACI,GAAyB,oBAAdC,UACP,OAAOA,UAEX,GAA+B,oBAApBC,gBACP,OAAOA,gBAEX,GAA4B,oBAAjBC,aACP,OAAOA,aAEX,GAA0B,oBAAfC,WACP,OAAOA,WAEX,GAA2B,oBAAhBC,YACP,OAAOA,YAEb,MAAOrH,GACL,QAIEsH,GAwCV,SAASC,EAAWC,EAAOC,GAEvBD,EAAQA,GAAS,GACjBC,EAAaA,GAAc,GAC3B,IACI,OAAO,IAAIC,KAAKF,EAAOC,GACzB,MAAOzH,GACL,GAAe,cAAXA,EAAE2H,KACF,MAAM3H,EAIV,IAFA,IACI4H,EAAU,IADuB,oBAAhBC,YAA8BA,YAAuC,oBAAlBC,cAAgCA,cAA0C,oBAAnBC,eAAiCA,eAAiBC,mBAExKzL,EAAI,EAAGA,EAAIiL,EAAMnK,OAAQd,GAAK,EACnCqL,EAAQK,OAAOT,EAAMjL,IAEzB,OAAOqL,EAAQM,QAAQT,EAAWU,OAMnB,oBAAZjJ,SAGP0C,EAAQ,GAEZ,IAAIwG,EAAYlJ,QAEhB,SAASmJ,EAAgBxD,EAAStF,GAC1BA,GACAsF,EAAQzE,MAAK,SAAUF,GACnBX,EAAS,KAAMW,MAChB,SAAU+F,GACT1G,EAAS0G,MAKrB,SAASqC,EAAoBzD,EAAStF,EAAUgJ,GACpB,mBAAbhJ,GACPsF,EAAQzE,KAAKb,GAGY,mBAAlBgJ,GACP1D,EAAe,MAAE0D,GAIzB,SAASC,EAAaC,GAOlB,MALmB,iBAARA,IACPC,QAAQC,KAAKF,EAAM,2CACnBA,EAAMG,OAAOH,IAGVA,EAGX,SAASI,IACL,GAAIpD,UAAUpI,QAAqD,mBAApCoI,UAAUA,UAAUpI,OAAS,GACxD,OAAOoI,UAAUA,UAAUpI,OAAS,GAO5C,IAAIyL,EAA4B,mCAC5BC,OAAgB,EAChBC,EAAa,GACb3C,EAAW7K,OAAOwK,UAAUK,SAG5B4C,EAAY,WACZC,EAAa,YAOjB,SAASC,EAAwBC,GAI7B,IAHA,IAAI/L,EAAS+L,EAAI/L,OACbpB,EAAM,IAAI8B,YAAYV,GACtBgM,EAAM,IAAI3M,WAAWT,GAChBM,EAAI,EAAGA,EAAIc,EAAQd,IACxB8M,EAAI9M,GAAK6M,EAAIE,WAAW/M,GAE5B,OAAON,EA4CX,SAASsN,EAAkBvC,GACvB,MAA6B,kBAAlB+B,EACAX,EAAUjJ,QAAQ4J,GA5BjC,SAAyC/B,GACrC,OAAO,IAAIoB,GAAU,SAAUjJ,GAC3B,IAAIqK,EAAMxC,EAAIyC,YAAYX,EAA2BI,GACjDQ,EAAOnC,EAAW,CAAC,KACvBiC,EAAIG,YAAYb,GAA2Bc,IAAIF,EAAM,OAErDF,EAAIK,QAAU,SAAU7J,GAGpBA,EAAE8J,iBACF9J,EAAE+J,kBACF5K,GAAQ,IAGZqK,EAAIQ,WAAa,WACb,IAAIC,EAAgBC,UAAUC,UAAUC,MAAM,iBAC1CC,EAAcH,UAAUC,UAAUC,MAAM,UAG5CjL,EAAQkL,IAAgBJ,GAAiBK,SAASL,EAAc,GAAI,KAAO,QAEzE,OAAE,WACR,OAAO,KAQJM,CAAgCvD,GAAK5G,MAAK,SAAUzE,GAEvD,OADAoN,EAAgBpN,KAKxB,SAAS6O,EAAgBC,GACrB,IAAIC,EAAY1B,EAAWyB,EAAO9C,MAG9BgD,EAAoB,GAExBA,EAAkB9F,QAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GACzDuL,EAAkBxL,QAAUA,EAC5BwL,EAAkBvL,OAASA,KAI/BsL,EAAUE,mBAAmBpO,KAAKmO,GAG7BD,EAAUG,QAGXH,EAAUG,QAAUH,EAAUG,QAAQzK,MAAK,WACvC,OAAOuK,EAAkB9F,WAH7B6F,EAAUG,QAAUF,EAAkB9F,QAQ9C,SAASiG,EAAkBL,GACvB,IAGIE,EAHY3B,EAAWyB,EAAO9C,MAGAiD,mBAAmBG,MAIrD,GAAIJ,EAEA,OADAA,EAAkBxL,UACXwL,EAAkB9F,QAIjC,SAASmG,EAAiBP,EAAQQ,GAC9B,IAGIN,EAHY3B,EAAWyB,EAAO9C,MAGAiD,mBAAmBG,MAIrD,GAAIJ,EAEA,OADAA,EAAkBvL,OAAO6L,GAClBN,EAAkB9F,QAIjC,SAASqG,EAAeT,EAAQU,GAC5B,OAAO,IAAI/C,GAAU,SAAUjJ,EAASC,GAGpC,GAFA4J,EAAWyB,EAAO9C,MAAQqB,EAAWyB,EAAO9C,OAoNzC,CAEHyD,QAAS,GAETC,GAAI,KAEJR,QAAS,KAETD,mBAAoB,IA1NhBH,EAAOY,GAAI,CACX,IAAIF,EAIA,OAAOhM,EAAQsL,EAAOY,IAHtBb,EAAgBC,GAChBA,EAAOY,GAAGC,QAMlB,IAAIC,EAAS,CAACd,EAAO9C,MAEjBwD,GACAI,EAAO/O,KAAKiO,EAAOe,SAGvB,IAAIC,EAAUzE,EAAI0E,KAAKrL,MAAM2G,EAAKuE,GAE9BJ,IACAM,EAAQE,gBAAkB,SAAU3L,GAChC,IAAIqL,EAAKI,EAAQvL,OACjB,IACImL,EAAGO,kBAAkBnB,EAAOoB,WACxB7L,EAAE8L,YAAc,GAEhBT,EAAGO,kBAAkB9C,GAE3B,MAAOiD,GACL,GAAgB,oBAAZA,EAAGpE,KAGH,MAAMoE,EAFNrD,QAAQC,KAAK,iBAAmB8B,EAAO9C,KAA1B,oCAA4E3H,EAAE8L,WAAa,eAAiB9L,EAAEgM,WAAa,sBAAwBvB,EAAOoB,UAAY,wBAQnMJ,EAAQQ,QAAU,SAAUjM,GACxBA,EAAE8J,iBACF1K,EAAOqM,EAAQxF,QAGnBwF,EAAQS,UAAY,WAChB/M,EAAQsM,EAAQvL,QAChB4K,EAAkBL,OAK9B,SAAS0B,EAAuB1B,GAC5B,OAAOS,EAAeT,GAAQ,GAGlC,SAAS2B,EAAuB3B,GAC5B,OAAOS,EAAeT,GAAQ,GAGlC,SAAS4B,EAAiB5B,EAAQ6B,GAC9B,IAAK7B,EAAOY,GACR,OAAO,EAGX,IAAIkB,GAAc9B,EAAOY,GAAGmB,iBAAiBC,SAAShC,EAAOoB,WACzDa,EAAcjC,EAAOe,QAAUf,EAAOY,GAAGG,QACzCmB,EAAYlC,EAAOe,QAAUf,EAAOY,GAAGG,QAY3C,GAVIkB,IAGIjC,EAAOe,UAAYc,GACnB5D,QAAQC,KAAK,iBAAmB8B,EAAO9C,KAA1B,uCAA8E8C,EAAOY,GAAGG,QAAU,eAAiBf,EAAOe,QAAU,KAGrJf,EAAOe,QAAUf,EAAOY,GAAGG,SAG3BmB,GAAaJ,EAAY,CAIzB,GAAIA,EAAY,CACZ,IAAIK,EAAanC,EAAOY,GAAGG,QAAU,EACjCoB,EAAanC,EAAOe,UACpBf,EAAOe,QAAUoB,GAIzB,OAAO,EAGX,OAAO,EAqBX,SAASC,EAAYC,GAEjB,OAAOvF,EAAW,CADF4B,EAAwB4D,KAAKD,EAAYhR,QAC1B,CAAEqM,KAAM2E,EAAY3E,OAIvD,SAAS6E,EAAerR,GACpB,OAAOA,GAASA,EAAMsR,4BAO1B,SAASC,EAAY3N,GACjB,IAAIwE,EAAOpF,KAEPkG,EAAUd,EAAKoJ,aAAa/M,MAAK,WACjC,IAAIsK,EAAY1B,EAAWjF,EAAKqJ,QAAQzF,MAExC,GAAI+C,GAAaA,EAAUG,QACvB,OAAOH,EAAUG,WAKzB,OADAvC,EAAoBzD,EAAStF,EAAUA,GAChCsF,EA2CX,SAASwI,EAAkB5C,EAAQ6C,EAAM/N,EAAUgO,QAC/B9P,IAAZ8P,IACAA,EAAU,GAGd,IACI,IAAIC,EAAK/C,EAAOY,GAAG5B,YAAYgB,EAAOoB,UAAWyB,GACjD/N,EAAS,KAAMiO,GACjB,MAAOvC,GACL,GAAIsC,EAAU,KAAO9C,EAAOY,IAAmB,sBAAbJ,EAAItD,MAA6C,kBAAbsD,EAAItD,MACtE,OAAOS,EAAUjJ,UAAUiB,MAAK,WAC5B,IAAKqK,EAAOY,IAAmB,kBAAbJ,EAAItD,OAA6B8C,EAAOY,GAAGmB,iBAAiBC,SAAShC,EAAOoB,YAAcpB,EAAOe,SAAWf,EAAOY,GAAGG,QAMpI,OAJIf,EAAOY,KACPZ,EAAOe,QAAUf,EAAOY,GAAGG,QAAU,GAGlCY,EAAuB3B,MAEnCrK,MAAK,WACJ,OAzDhB,SAAuBqK,GACnBD,EAAgBC,GAKhB,IAHA,IAAIC,EAAY1B,EAAWyB,EAAO9C,MAC9ByD,EAAUV,EAAUU,QAEf7O,EAAI,EAAGA,EAAI6O,EAAQ/N,OAAQd,IAAK,CACrC,IAAIkR,EAASrC,EAAQ7O,GACjBkR,EAAOL,QAAQ/B,KACfoC,EAAOL,QAAQ/B,GAAGC,QAClBmC,EAAOL,QAAQ/B,GAAK,MAK5B,OAFAZ,EAAOY,GAAK,KAELc,EAAuB1B,GAAQrK,MAAK,SAAUiL,GAEjD,OADAZ,EAAOY,GAAKA,EACRgB,EAAiB5B,GAEV2B,EAAuB3B,GAE3BY,KACRjL,MAAK,SAAUiL,GAGdZ,EAAOY,GAAKX,EAAUW,GAAKA,EAC3B,IAAK,IAAI9O,EAAI,EAAGA,EAAI6O,EAAQ/N,OAAQd,IAChC6O,EAAQ7O,GAAG6Q,QAAQ/B,GAAKA,KAEtB,OAAE,SAAUJ,GAElB,MADAD,EAAiBP,EAAQQ,GACnBA,KA0BSyC,CAAcjD,GAAQrK,MAAK,WAC9BiN,EAAkB5C,EAAQ6C,EAAM/N,EAAUgO,EAAU,SAElD,MAAEhO,GAGhBA,EAAS0L,IAylBjB,IAAI0C,EAAe,CACfC,QAAS,eACTC,aAxkBJ,SAAsBC,GAClB,IAAI/J,EAAOpF,KACP8L,EAAS,CACTY,GAAI,MAGR,GAAIyC,EACA,IAAK,IAAIvR,KAAKuR,EACVrD,EAAOlO,GAAKuR,EAAQvR,GAK5B,IAAImO,EAAY1B,EAAWyB,EAAO9C,MAG7B+C,IACDA,EA/BG,CAEHU,QAAS,GAETC,GAAI,KAEJR,QAAS,KAETD,mBAAoB,IAyBpB5B,EAAWyB,EAAO9C,MAAQ+C,GAI9BA,EAAUU,QAAQ5O,KAAKuH,GAGlBA,EAAKoJ,aACNpJ,EAAKoJ,WAAapJ,EAAKgK,MACvBhK,EAAKgK,MAAQb,GAIjB,IAAIc,EAAe,GAEnB,SAASC,IAGL,OAAO7F,EAAUjJ,UAGrB,IAAK,IAAI+O,EAAI,EAAGA,EAAIxD,EAAUU,QAAQ/N,OAAQ6Q,IAAK,CAC/C,IAAIT,EAAS/C,EAAUU,QAAQ8C,GAC3BT,IAAW1J,GAEXiK,EAAaxR,KAAKiR,EAAON,aAAoB,MAAEc,IAKvD,IAAI7C,EAAUV,EAAUU,QAAQzO,MAAM,GAItC,OAAOyL,EAAUjC,IAAI6H,GAAc5N,MAAK,WAGpC,OAFAqK,EAAOY,GAAKX,EAAUW,GAEfc,EAAuB1B,MAC/BrK,MAAK,SAAUiL,GAEd,OADAZ,EAAOY,GAAKA,EACRgB,EAAiB5B,EAAQ1G,EAAKoK,eAAe3C,SAEtCY,EAAuB3B,GAE3BY,KACRjL,MAAK,SAAUiL,GACdZ,EAAOY,GAAKX,EAAUW,GAAKA,EAC3BtH,EAAKqJ,QAAU3C,EAEf,IAAK,IAAI2D,EAAI,EAAGA,EAAIhD,EAAQ/N,OAAQ+Q,IAAK,CACrC,IAAIX,EAASrC,EAAQgD,GACjBX,IAAW1J,IAEX0J,EAAOL,QAAQ/B,GAAKZ,EAAOY,GAC3BoC,EAAOL,QAAQ5B,QAAUf,EAAOe,cAggB5C6C,SArhCJ,WACI,IAGI,IAAKrH,IAAQA,EAAI0E,KACb,OAAO,EAMX,IAAI4C,EAAmC,oBAAjBC,cAAgC,4BAA4BC,KAAKtE,UAAUC,aAAe,SAASqE,KAAKtE,UAAUC,aAAe,aAAaqE,KAAKtE,UAAUuE,UAE/KC,EAA4B,mBAAVC,QAAsE,IAA9CA,MAAMtI,WAAWuI,QAAQ,gBAQvE,QAASN,GAAYI,IAAkC,oBAAdzH,WAKlB,oBAAhB4H,YACT,MAAO7O,GACL,OAAO,GAy/BD8O,GACVC,QAjdJ,SAAiBhI,EAAUxH,GACvB,IAAIwE,EAAOpF,KAEPkG,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C2E,EAAKgK,QAAQ3N,MAAK,WACdiN,EAAkBtJ,EAAKqJ,QAASnE,GAAW,SAAUgC,EAAKxB,GACtD,GAAIwB,EACA,OAAO7L,EAAO6L,GAGlB,IACI,IACI+D,EADQvF,EAAYE,YAAY5F,EAAKqJ,QAAQvB,WACjCoD,aACZC,EAAkB,EAEtBF,EAAI9C,UAAY,WACZ,IAAIiD,EAASH,EAAI9O,OAEjB,GAAIiP,EAAQ,CACR,IAAIxT,EAAQwT,EAAOxT,MACfqR,EAAerR,KACfA,EAAQkR,EAAYlR,IAExB,IAAIuE,EAAS6G,EAASpL,EAAOwT,EAAO1G,IAAKyG,UAK1B,IAAXhP,EACAf,EAAQe,GAERiP,EAAiB,gBAGrBhQ,KAIR6P,EAAI/C,QAAU,WACV7M,EAAO4P,EAAI/I,QAEjB,MAAOjG,GACLZ,EAAOY,UAGT,MAAEZ,MAKhB,OAFAiJ,EAAgBxD,EAAStF,GAElBsF,GAgaPuK,QA5fJ,SAAiB3G,EAAKlJ,GAClB,IAAIwE,EAAOpF,KAEX8J,EAAMD,EAAaC,GAEnB,IAAI5D,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C2E,EAAKgK,QAAQ3N,MAAK,WACdiN,EAAkBtJ,EAAKqJ,QAASnE,GAAW,SAAUgC,EAAKxB,GACtD,GAAIwB,EACA,OAAO7L,EAAO6L,GAGlB,IACI,IACI+D,EADQvF,EAAYE,YAAY5F,EAAKqJ,QAAQvB,WACjCwD,IAAI5G,GAEpBuG,EAAI9C,UAAY,WACZ,IAAIvQ,EAAQqT,EAAI9O,YACFzC,IAAV9B,IACAA,EAAQ,MAERqR,EAAerR,KACfA,EAAQkR,EAAYlR,IAExBwD,EAAQxD,IAGZqT,EAAI/C,QAAU,WACV7M,EAAO4P,EAAI/I,QAEjB,MAAOjG,GACLZ,EAAOY,UAGT,MAAEZ,MAIhB,OADAiJ,EAAgBxD,EAAStF,GAClBsF,GAudPyK,QA9ZJ,SAAiB7G,EAAK9M,EAAO4D,GACzB,IAAIwE,EAAOpF,KAEX8J,EAAMD,EAAaC,GAEnB,IAAI5D,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C,IAAIqL,EACJ1G,EAAKgK,QAAQ3N,MAAK,WAEd,OADAqK,EAAS1G,EAAKqJ,QACe,kBAAzB/G,EAAS1E,KAAKhG,GACP4N,EAAkBkB,EAAOY,IAAIjL,MAAK,SAAUmP,GAC/C,OAAIA,EACO5T,GA7TV+N,EA+TkB/N,EA9T5B,IAAIyM,GAAU,SAAUjJ,EAASC,GACpC,IAAIoQ,EAAS,IAAIC,WACjBD,EAAOvD,QAAU7M,EACjBoQ,EAAOE,UAAY,SAAU1P,GACzB,IAAI2P,EAASC,KAAK5P,EAAE6P,OAAO3P,QAAU,IACrCf,EAAQ,CACJ8N,6BAA6B,EAC7BnR,KAAM6T,EACNxH,KAAMuB,EAAKvB,QAGnBqH,EAAOM,mBAAmBpG,OAZlC,IAAqBA,KAkUF/N,KACRyE,MAAK,SAAUzE,GACd0R,EAAkBtJ,EAAKqJ,QAASlE,GAAY,SAAU+B,EAAKxB,GACvD,GAAIwB,EACA,OAAO7L,EAAO6L,GAGlB,IACI,IAAI8E,EAAQtG,EAAYE,YAAY5F,EAAKqJ,QAAQvB,WAMnC,OAAVlQ,IACAA,OAAQ8B,GAGZ,IAAIuR,EAAMe,EAAMnG,IAAIjO,EAAO8M,GAE3BgB,EAAYO,WAAa,gBAOPvM,IAAV9B,IACAA,EAAQ,MAGZwD,EAAQxD,IAEZ8N,EAAYI,QAAUJ,EAAYwC,QAAU,WACxC,IAAIhB,EAAM+D,EAAI/I,MAAQ+I,EAAI/I,MAAQ+I,EAAIvF,YAAYxD,MAClD7G,EAAO6L,IAEb,MAAOjL,GACLZ,EAAOY,UAGT,MAAEZ,MAIhB,OADAiJ,EAAgBxD,EAAStF,GAClBsF,GAiWPmL,WA9VJ,SAAoBvH,EAAKlJ,GACrB,IAAIwE,EAAOpF,KAEX8J,EAAMD,EAAaC,GAEnB,IAAI5D,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C2E,EAAKgK,QAAQ3N,MAAK,WACdiN,EAAkBtJ,EAAKqJ,QAASlE,GAAY,SAAU+B,EAAKxB,GACvD,GAAIwB,EACA,OAAO7L,EAAO6L,GAGlB,IACI,IAMI+D,EANQvF,EAAYE,YAAY5F,EAAKqJ,QAAQvB,WAMzB,OAAEpD,GAC1BgB,EAAYO,WAAa,WACrB7K,KAGJsK,EAAYwC,QAAU,WAClB7M,EAAO4P,EAAI/I,QAKfwD,EAAYI,QAAU,WAClB,IAAIoB,EAAM+D,EAAI/I,MAAQ+I,EAAI/I,MAAQ+I,EAAIvF,YAAYxD,MAClD7G,EAAO6L,IAEb,MAAOjL,GACLZ,EAAOY,UAGT,MAAEZ,MAIhB,OADAiJ,EAAgBxD,EAAStF,GAClBsF,GAqTPoL,MAlTJ,SAAe1Q,GACX,IAAIwE,EAAOpF,KAEPkG,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C2E,EAAKgK,QAAQ3N,MAAK,WACdiN,EAAkBtJ,EAAKqJ,QAASlE,GAAY,SAAU+B,EAAKxB,GACvD,GAAIwB,EACA,OAAO7L,EAAO6L,GAGlB,IACI,IACI+D,EADQvF,EAAYE,YAAY5F,EAAKqJ,QAAQvB,WACjCoE,QAEhBxG,EAAYO,WAAa,WACrB7K,KAGJsK,EAAYI,QAAUJ,EAAYwC,QAAU,WACxC,IAAIhB,EAAM+D,EAAI/I,MAAQ+I,EAAI/I,MAAQ+I,EAAIvF,YAAYxD,MAClD7G,EAAO6L,IAEb,MAAOjL,GACLZ,EAAOY,UAGT,MAAEZ,MAIhB,OADAiJ,EAAgBxD,EAAStF,GAClBsF,GAqRPxH,OAlRJ,SAAgBkC,GACZ,IAAIwE,EAAOpF,KAEPkG,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C2E,EAAKgK,QAAQ3N,MAAK,WACdiN,EAAkBtJ,EAAKqJ,QAASnE,GAAW,SAAUgC,EAAKxB,GACtD,GAAIwB,EACA,OAAO7L,EAAO6L,GAGlB,IACI,IACI+D,EADQvF,EAAYE,YAAY5F,EAAKqJ,QAAQvB,WACjCqE,QAEhBlB,EAAI9C,UAAY,WACZ/M,EAAQ6P,EAAI9O,SAGhB8O,EAAI/C,QAAU,WACV7M,EAAO4P,EAAI/I,QAEjB,MAAOjG,GACLZ,EAAOY,UAGT,MAAEZ,MAIhB,OADAiJ,EAAgBxD,EAAStF,GAClBsF,GAsPP4D,IAnPJ,SAAatH,EAAG5B,GACZ,IAAIwE,EAAOpF,KAEPkG,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GACvC+B,EAAI,EACJhC,EAAQ,MAKZ4E,EAAKgK,QAAQ3N,MAAK,WACdiN,EAAkBtJ,EAAKqJ,QAASnE,GAAW,SAAUgC,EAAKxB,GACtD,GAAIwB,EACA,OAAO7L,EAAO6L,GAGlB,IACI,IAAI8E,EAAQtG,EAAYE,YAAY5F,EAAKqJ,QAAQvB,WAC7CsE,GAAW,EACXnB,EAAMe,EAAMK,gBAEhBpB,EAAI9C,UAAY,WACZ,IAAIiD,EAASH,EAAI9O,OACZiP,EAOK,IAANhO,GAKKgP,EAFLhR,EAAQgQ,EAAO1G,MAKX0H,GAAW,EACXhB,EAAOkB,QAAQlP,IAdnBhC,EAAQ,OAsBhB6P,EAAI/C,QAAU,WACV7M,EAAO4P,EAAI/I,QAEjB,MAAOjG,GACLZ,EAAOY,UAGT,MAAEZ,MAIhB,OADAiJ,EAAgBxD,EAAStF,GAClBsF,GA0LPyL,KAvLJ,SAAc/Q,GACV,IAAIwE,EAAOpF,KAEPkG,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C2E,EAAKgK,QAAQ3N,MAAK,WACdiN,EAAkBtJ,EAAKqJ,QAASnE,GAAW,SAAUgC,EAAKxB,GACtD,GAAIwB,EACA,OAAO7L,EAAO6L,GAGlB,IACI,IACI+D,EADQvF,EAAYE,YAAY5F,EAAKqJ,QAAQvB,WACjCuE,gBACZE,EAAO,GAEXtB,EAAI9C,UAAY,WACZ,IAAIiD,EAASH,EAAI9O,OAEZiP,GAKLmB,EAAK9T,KAAK2S,EAAO1G,KACjB0G,EAAiB,YALbhQ,EAAQmR,IAQhBtB,EAAI/C,QAAU,WACV7M,EAAO4P,EAAI/I,QAEjB,MAAOjG,GACLZ,EAAOY,UAGT,MAAEZ,MAIhB,OADAiJ,EAAgBxD,EAAStF,GAClBsF,GAkJP0L,aA/IJ,SAAsBzC,EAASvO,GAC3BA,EAAWsJ,EAAYxI,MAAM1B,KAAM8G,WAEnC,IAAI+K,EAAgB7R,KAAK8R,UACzB3C,EAA6B,mBAAZA,GAA0BA,GAAW,IACzCnG,OACTmG,EAAQnG,KAAOmG,EAAQnG,MAAQ6I,EAAc7I,KAC7CmG,EAAQjC,UAAYiC,EAAQjC,WAAa2E,EAAc3E,WAG3D,IACIhH,EADAd,EAAOpF,KAEX,GAAKmP,EAAQnG,KAEN,CACH,IAEI+I,EAFc5C,EAAQnG,OAAS6I,EAAc7I,MAAQ5D,EAAKqJ,QAAQ/B,GAExCjD,EAAUjJ,QAAQ4E,EAAKqJ,QAAQ/B,IAAMc,EAAuB2B,GAAS1N,MAAK,SAAUiL,GAC9G,IAAIX,EAAY1B,EAAW8E,EAAQnG,MAC/ByD,EAAUV,EAAUU,QACxBV,EAAUW,GAAKA,EACf,IAAK,IAAI9O,EAAI,EAAGA,EAAI6O,EAAQ/N,OAAQd,IAChC6O,EAAQ7O,GAAG6Q,QAAQ/B,GAAKA,EAE5B,OAAOA,KAgDPxG,EA7CCiJ,EAAQjC,UA6CC6E,EAAUtQ,MAAK,SAAUiL,GAC/B,GAAKA,EAAGmB,iBAAiBC,SAASqB,EAAQjC,WAA1C,CAIA,IAAIG,EAAaX,EAAGG,QAAU,EAE9BhB,EAAgBsD,GAEhB,IAAIpD,EAAY1B,EAAW8E,EAAQnG,MAC/ByD,EAAUV,EAAUU,QAExBC,EAAGC,QACH,IAAK,IAAI/O,EAAI,EAAGA,EAAI6O,EAAQ/N,OAAQd,IAAK,CACrC,IAAIkR,EAASrC,EAAQ7O,GACrBkR,EAAOL,QAAQ/B,GAAK,KACpBoC,EAAOL,QAAQ5B,QAAUQ,EAwB7B,OArBwB,IAAI5D,GAAU,SAAUjJ,EAASC,GACrD,IAAI4P,EAAMhI,EAAI0E,KAAKoC,EAAQnG,KAAMqE,GAEjCgD,EAAI/C,QAAU,SAAUhB,GACX+D,EAAI9O,OACVoL,QACHlM,EAAO6L,IAGX+D,EAAIrD,gBAAkB,WACTqD,EAAI9O,OACVyQ,kBAAkB7C,EAAQjC,YAGjCmD,EAAI9C,UAAY,WACZ,IAAIb,EAAK2D,EAAI9O,OACbmL,EAAGC,QACHnM,EAAQkM,OAISjL,MAAK,SAAUiL,GACpCX,EAAUW,GAAKA,EACf,IAAK,IAAI6C,EAAI,EAAGA,EAAI9C,EAAQ/N,OAAQ6Q,IAAK,CACrC,IAAI0C,EAAWxF,EAAQ8C,GACvB0C,EAASxD,QAAQ/B,GAAKA,EACtBP,EAAkB8F,EAASxD,aAEzB,OAAE,SAAUnC,GAElB,MADCD,EAAiB8C,EAAS7C,IAAQ7C,EAAUjJ,WAAkB,OAAE,eAC3D8L,SA7FJyF,EAAUtQ,MAAK,SAAUiL,GAC/Bb,EAAgBsD,GAEhB,IAAIpD,EAAY1B,EAAW8E,EAAQnG,MAC/ByD,EAAUV,EAAUU,QAExBC,EAAGC,QACH,IAAK,IAAI/O,EAAI,EAAGA,EAAI6O,EAAQ/N,OAAQd,IACnB6O,EAAQ7O,GACd6Q,QAAQ/B,GAAK,KAuBxB,OApBoB,IAAIjD,GAAU,SAAUjJ,EAASC,GACjD,IAAI4P,EAAMhI,EAAI6J,eAAe/C,EAAQnG,MAErCqH,EAAI/C,QAAU+C,EAAI8B,UAAY,SAAU7F,GACpC,IAAII,EAAK2D,EAAI9O,OACTmL,GACAA,EAAGC,QAEPlM,EAAO6L,IAGX+D,EAAI9C,UAAY,WACZ,IAAIb,EAAK2D,EAAI9O,OACTmL,GACAA,EAAGC,QAEPnM,EAAQkM,OAIKjL,MAAK,SAAUiL,GAChCX,EAAUW,GAAKA,EACf,IAAK,IAAI9O,EAAI,EAAGA,EAAI6O,EAAQ/N,OAAQd,IAEhCuO,EADcM,EAAQ7O,GACI6Q,YAExB,OAAE,SAAUnC,GAElB,MADCD,EAAiB8C,EAAS7C,IAAQ7C,EAAUjJ,WAAkB,OAAE,eAC3D8L,aAvDlBpG,EAAUuD,EAAUhJ,OAAO,qBAmH/B,OADAiJ,EAAgBxD,EAAStF,GAClBsF,IAyBX,IAAIkM,EAAa,mEAGbC,EAAyB,gCAEzBC,EAAoB,YACpBC,EAA2BD,EAAkB5T,OAG7C8T,EAAmB,OACnBC,EAAY,OACZC,EAAiB,OACjBC,EAAkB,OAClBC,EAAyB,OACzBC,EAAkB,OAClBC,EAAkB,OAClBC,EAAmB,OACnBC,EAAmB,OACnBC,EAAoB,OACpBC,EAAoB,OACpBC,EAAgCZ,EAA2BC,EAAiB9T,OAE5E0U,EAAavW,OAAOwK,UAAUK,SAElC,SAAS2L,EAAeC,GAEpB,IAEI1V,EAEA2V,EAAUC,EAAUC,EAAUC,EAJ9BC,EAAyC,IAA1BL,EAAiB5U,OAChCuG,EAAMqO,EAAiB5U,OAEvBkV,EAAI,EAG8C,MAAlDN,EAAiBA,EAAiB5U,OAAS,KAC3CiV,IACsD,MAAlDL,EAAiBA,EAAiB5U,OAAS,IAC3CiV,KAIR,IAAIzU,EAAS,IAAIE,YAAYuU,GACzBE,EAAQ,IAAI9V,WAAWmB,GAE3B,IAAKtB,EAAI,EAAGA,EAAIqH,EAAKrH,GAAK,EACtB2V,EAAWnB,EAAWnC,QAAQqD,EAAiB1V,IAC/C4V,EAAWpB,EAAWnC,QAAQqD,EAAiB1V,EAAI,IACnD6V,EAAWrB,EAAWnC,QAAQqD,EAAiB1V,EAAI,IACnD8V,EAAWtB,EAAWnC,QAAQqD,EAAiB1V,EAAI,IAGnDiW,EAAMD,KAAOL,GAAY,EAAIC,GAAY,EACzCK,EAAMD,MAAmB,GAAXJ,IAAkB,EAAIC,GAAY,EAChDI,EAAMD,MAAmB,EAAXH,IAAiB,EAAe,GAAXC,EAEvC,OAAOxU,EAKX,SAAS4U,EAAe5U,GAEpB,IAEItB,EAFAiW,EAAQ,IAAI9V,WAAWmB,GACvB6U,EAAe,GAGnB,IAAKnW,EAAI,EAAGA,EAAIiW,EAAMnV,OAAQd,GAAK,EAE/BmW,GAAgB3B,EAAWyB,EAAMjW,IAAM,GACvCmW,GAAgB3B,GAAuB,EAAXyB,EAAMjW,KAAW,EAAIiW,EAAMjW,EAAI,IAAM,GACjEmW,GAAgB3B,GAA2B,GAAfyB,EAAMjW,EAAI,KAAY,EAAIiW,EAAMjW,EAAI,IAAM,GACtEmW,GAAgB3B,EAA0B,GAAfyB,EAAMjW,EAAI,IASzC,OANIiW,EAAMnV,OAAS,GAAM,EACrBqV,EAAeA,EAAaC,UAAU,EAAGD,EAAarV,OAAS,GAAK,IAC7DmV,EAAMnV,OAAS,GAAM,IAC5BqV,EAAeA,EAAaC,UAAU,EAAGD,EAAarV,OAAS,GAAK,MAGjEqV,EAyIX,IAAIE,EAAwB,CACxBhX,UApIJ,SAAmBD,EAAO4D,GACtB,IAAIsT,EAAY,GAShB,GARIlX,IACAkX,EAAYd,EAAWpQ,KAAKhG,IAO5BA,IAAwB,yBAAdkX,GAAwClX,EAAMkC,QAA4C,yBAAlCkU,EAAWpQ,KAAKhG,EAAMkC,SAAqC,CAG7H,IAAIA,EACAiV,EAAS7B,EAETtV,aAAiBoC,aACjBF,EAASlC,EACTmX,GAAU3B,IAEVtT,EAASlC,EAAMkC,OAEG,uBAAdgV,EACAC,GAAUzB,EACW,wBAAdwB,EACPC,GAAUxB,EACW,+BAAduB,EACPC,GAAUvB,EACW,wBAAdsB,EACPC,GAAUtB,EACW,yBAAdqB,EACPC,GAAUpB,EACW,wBAAdmB,EACPC,GAAUrB,EACW,yBAAdoB,EACPC,GAAUnB,EACW,0BAAdkB,EACPC,GAAUlB,EACW,0BAAdiB,EACPC,GAAUjB,EAEVtS,EAAS,IAAIjD,MAAM,wCAI3BiD,EAASuT,EAASL,EAAe5U,SAC9B,GAAkB,kBAAdgV,EAA+B,CAEtC,IAAIE,EAAa,IAAItD,WAErBsD,EAAWC,OAAS,WAEhB,IAAIC,EAtIO,uBAsIkBtX,EAAMwM,KAAO,IAAMsK,EAAe9T,KAAKuB,QAEpEX,EAAS0R,gBAAgCgC,IAG7CF,EAAWG,kBAAkBvX,QAE7B,IACI4D,EAASxD,KAAK6B,UAAUjC,IAC1B,MAAOqE,GACL0I,QAAQzC,MAAM,8CAA+CtK,GAE7D4D,EAAS,KAAMS,KAqEvBnE,YAxDJ,SAAqBF,GAIjB,GAAIA,EAAMgX,UAAU,EAAGzB,KAA8BD,EACjD,OAAOlV,KAAKC,MAAML,GAMtB,IAGIwX,EAHAlB,EAAmBtW,EAAMgX,UAAUb,GACnC3J,EAAOxM,EAAMgX,UAAUzB,EAA0BY,GAKrD,GAAI3J,IAASiJ,GAAaJ,EAAuBxC,KAAKyD,GAAmB,CACrE,IAAImB,EAAUnB,EAAiB7H,MAAM4G,GACrCmC,EAAWC,EAAQ,GACnBnB,EAAmBA,EAAiBU,UAAUS,EAAQ,GAAG/V,QAE7D,IAAIQ,EAASmU,EAAeC,GAI5B,OAAQ9J,GACJ,KAAKgJ,EACD,OAAOtT,EACX,KAAKuT,EACD,OAAO7J,EAAW,CAAC1J,GAAS,CAAEsK,KAAMgL,IACxC,KAAK9B,EACD,OAAO,IAAIgC,UAAUxV,GACzB,KAAKyT,EACD,OAAO,IAAI5U,WAAWmB,GAC1B,KAAK0T,EACD,OAAO,IAAI+B,kBAAkBzV,GACjC,KAAK2T,EACD,OAAO,IAAI+B,WAAW1V,GAC1B,KAAK6T,EACD,OAAO,IAAI8B,YAAY3V,GAC3B,KAAK4T,EACD,OAAO,IAAIgC,WAAW5V,GAC1B,KAAK8T,EACD,OAAO,IAAI+B,YAAY7V,GAC3B,KAAK+T,EACD,OAAO,IAAI+B,aAAa9V,GAC5B,KAAKgU,EACD,OAAO,IAAI+B,aAAa/V,GAC5B,QACI,MAAM,IAAIvB,MAAM,gBAAkB6L,KAO1C6J,eAAgBA,EAChBS,eAAgBA,GAapB,SAASoB,EAAc3S,EAAGuJ,EAAQlL,EAAUgJ,GACxCrH,EAAE4S,WAAW,8BAAgCrJ,EAAOoB,UAAvC,+CAAwG,GAAItM,EAAUgJ,GAyCvI,SAASwL,EAAc7S,EAAGuJ,EAAQuJ,EAAcC,EAAM1U,EAAUgJ,GAC5DrH,EAAE4S,WAAWE,EAAcC,EAAM1U,GAAU,SAAU2B,EAAG+E,GAChDA,EAAMxE,OAASwE,EAAMiO,WACrBhT,EAAE4S,WAAW,iEAAuE,CAACrJ,EAAOoB,YAAY,SAAU3K,EAAGiT,GAC5GA,EAAQC,KAAK/W,OAOdkL,EAAcrH,EAAG+E,GAJjB4N,EAAc3S,EAAGuJ,GAAQ,WACrBvJ,EAAE4S,WAAWE,EAAcC,EAAM1U,EAAUgJ,KAC5CA,KAIRA,GAEHA,EAAcrH,EAAG+E,KAEtBsC,GA6EP,SAAS8L,EAAS5L,EAAK9M,EAAO4D,EAAU+U,GACpC,IAAIvQ,EAAOpF,KAEX8J,EAAMD,EAAaC,GAEnB,IAAI5D,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C2E,EAAKgK,QAAQ3N,MAAK,gBAIA3C,IAAV9B,IACAA,EAAQ,MAIZ,IAAI4Y,EAAgB5Y,EAEhB8O,EAAS1G,EAAKqJ,QAClB3C,EAAO+J,WAAW5Y,UAAUD,GAAO,SAAUA,EAAOsK,GAC5CA,EACA7G,EAAO6G,GAEPwE,EAAOY,GAAG5B,aAAY,SAAUvI,GAC5B6S,EAAc7S,EAAGuJ,EAAQ,0BAA4BA,EAAOoB,UAAnC,8BAAmF,CAACpD,EAAK9M,IAAQ,WACtHwD,EAAQoV,MACT,SAAUrT,EAAG+E,GACZ7G,EAAO6G,SAEZ,SAAUwO,GAGT,GAAIA,EAAShT,OAASgT,EAASC,UAAW,CAQtC,GAAIJ,EAAc,EAEd,YADAnV,EAAQkV,EAAShU,MAAM0D,EAAM,CAAC0E,EAAK8L,EAAehV,EAAU+U,EAAc,KAG9ElV,EAAOqV,aAKjB,MAAErV,MAIhB,OADAiJ,EAAgBxD,EAAStF,GAClBsF,EAmIX,SAAS8P,GAAiBtJ,GACtB,OAAO,IAAIjD,GAAU,SAAUjJ,EAASC,GACpCiM,EAAG5B,aAAY,SAAUvI,GACrBA,EAAE4S,WAAW,8FAAoG,IAAI,SAAU5S,EAAGiT,GAG9H,IAFA,IAAIS,EAAa,GAERrY,EAAI,EAAGA,EAAI4X,EAAQC,KAAK/W,OAAQd,IACrCqY,EAAWpY,KAAK2X,EAAQC,KAAKS,KAAKtY,GAAGoL,MAGzCxI,EAAQ,CACJkM,GAAIA,EACJuJ,WAAYA,OAEjB,SAAU1T,EAAG+E,GACZ7G,EAAO6G,SAEZ,SAAUwO,GACTrV,EAAOqV,SAwEnB,IAAIK,GAAgB,CAChBlH,QAAS,gBACTC,aArZJ,SAAwBC,GACpB,IAAI/J,EAAOpF,KACP8L,EAAS,CACTY,GAAI,MAGR,GAAIyC,EACA,IAAK,IAAIvR,KAAKuR,EACVrD,EAAOlO,GAA2B,iBAAfuR,EAAQvR,GAAkBuR,EAAQvR,GAAG8J,WAAayH,EAAQvR,GAIrF,IAAIwY,EAAgB,IAAI3M,GAAU,SAAUjJ,EAASC,GAGjD,IACIqL,EAAOY,GAAKkD,aAAa9D,EAAO9C,KAAMiB,OAAO6B,EAAOe,SAAUf,EAAOuK,YAAavK,EAAOwK,MAC3F,MAAOjV,GACL,OAAOZ,EAAOY,GAIlByK,EAAOY,GAAG5B,aAAY,SAAUvI,GAC5B2S,EAAc3S,EAAGuJ,GAAQ,WACrB1G,EAAKqJ,QAAU3C,EACftL,OACD,SAAU+B,EAAG+E,GACZ7G,EAAO6G,QAEZ7G,MAIP,OADAqL,EAAO+J,WAAa5B,EACbmC,GAqXP1G,SA1oB+B,mBAAjBE,aA2oBdQ,QAjUJ,SAAmBhI,EAAUxH,GACzB,IAAIwE,EAAOpF,KAEPkG,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C2E,EAAKgK,QAAQ3N,MAAK,WACd,IAAIqK,EAAS1G,EAAKqJ,QAElB3C,EAAOY,GAAG5B,aAAY,SAAUvI,GAC5B6S,EAAc7S,EAAGuJ,EAAQ,iBAAmBA,EAAOoB,UAAW,IAAI,SAAU3K,EAAGiT,GAI3E,IAHA,IAAIC,EAAOD,EAAQC,KACf/W,EAAS+W,EAAK/W,OAETd,EAAI,EAAGA,EAAIc,EAAQd,IAAK,CAC7B,IAAIsY,EAAOT,EAAKS,KAAKtY,GACjB2D,EAAS2U,EAAKlZ,MAYlB,GARIuE,IACAA,EAASuK,EAAO+J,WAAW3Y,YAAYqE,SAO5B,KAJfA,EAAS6G,EAAS7G,EAAQ2U,EAAKpM,IAAKlM,EAAI,IAMpC,YADA4C,EAAQe,GAKhBf,OACD,SAAU+B,EAAG+E,GACZ7G,EAAO6G,YAGT,MAAE7G,MAIhB,OADAiJ,EAAgBxD,EAAStF,GAClBsF,GAyRPuK,QAhWJ,SAAmB3G,EAAKlJ,GACpB,IAAIwE,EAAOpF,KAEX8J,EAAMD,EAAaC,GAEnB,IAAI5D,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C2E,EAAKgK,QAAQ3N,MAAK,WACd,IAAIqK,EAAS1G,EAAKqJ,QAClB3C,EAAOY,GAAG5B,aAAY,SAAUvI,GAC5B6S,EAAc7S,EAAGuJ,EAAQ,iBAAmBA,EAAOoB,UAAY,yBAA0B,CAACpD,IAAM,SAAUvH,EAAGiT,GACzG,IAAIjU,EAASiU,EAAQC,KAAK/W,OAAS8W,EAAQC,KAAKS,KAAK,GAAGlZ,MAAQ,KAI5DuE,IACAA,EAASuK,EAAO+J,WAAW3Y,YAAYqE,IAG3Cf,EAAQe,MACT,SAAUgB,EAAG+E,GACZ7G,EAAO6G,YAGT,MAAE7G,MAIhB,OADAiJ,EAAgBxD,EAAStF,GAClBsF,GAsUPyK,QAhOJ,SAAmB7G,EAAK9M,EAAO4D,GAC3B,OAAO8U,EAAShU,MAAM1B,KAAM,CAAC8J,EAAK9M,EAAO4D,EAAU,KAgOnDyQ,WA7NJ,SAAsBvH,EAAKlJ,GACvB,IAAIwE,EAAOpF,KAEX8J,EAAMD,EAAaC,GAEnB,IAAI5D,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C2E,EAAKgK,QAAQ3N,MAAK,WACd,IAAIqK,EAAS1G,EAAKqJ,QAClB3C,EAAOY,GAAG5B,aAAY,SAAUvI,GAC5B6S,EAAc7S,EAAGuJ,EAAQ,eAAiBA,EAAOoB,UAAY,iBAAkB,CAACpD,IAAM,WAClFtJ,OACD,SAAU+B,EAAG+E,GACZ7G,EAAO6G,YAGT,MAAE7G,MAIhB,OADAiJ,EAAgBxD,EAAStF,GAClBsF,GA2MPoL,MAtMJ,SAAiB1Q,GACb,IAAIwE,EAAOpF,KAEPkG,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C2E,EAAKgK,QAAQ3N,MAAK,WACd,IAAIqK,EAAS1G,EAAKqJ,QAClB3C,EAAOY,GAAG5B,aAAY,SAAUvI,GAC5B6S,EAAc7S,EAAGuJ,EAAQ,eAAiBA,EAAOoB,UAAW,IAAI,WAC5D1M,OACD,SAAU+B,EAAG+E,GACZ7G,EAAO6G,YAGT,MAAE7G,MAIhB,OADAiJ,EAAgBxD,EAAStF,GAClBsF,GAsLPxH,OAjLJ,SAAkBkC,GACd,IAAIwE,EAAOpF,KAEPkG,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C2E,EAAKgK,QAAQ3N,MAAK,WACd,IAAIqK,EAAS1G,EAAKqJ,QAClB3C,EAAOY,GAAG5B,aAAY,SAAUvI,GAE5B6S,EAAc7S,EAAGuJ,EAAQ,+BAAiCA,EAAOoB,UAAW,IAAI,SAAU3K,EAAGiT,GACzF,IAAIjU,EAASiU,EAAQC,KAAKS,KAAK,GAAGK,EAClC/V,EAAQe,MACT,SAAUgB,EAAG+E,GACZ7G,EAAO6G,YAGT,MAAE7G,MAIhB,OADAiJ,EAAgBxD,EAAStF,GAClBsF,GA+JP4D,IArJJ,SAAetH,EAAG5B,GACd,IAAIwE,EAAOpF,KAEPkG,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C2E,EAAKgK,QAAQ3N,MAAK,WACd,IAAIqK,EAAS1G,EAAKqJ,QAClB3C,EAAOY,GAAG5B,aAAY,SAAUvI,GAC5B6S,EAAc7S,EAAGuJ,EAAQ,mBAAqBA,EAAOoB,UAAY,wBAAyB,CAAC1K,EAAI,IAAI,SAAUD,EAAGiT,GAC5G,IAAIjU,EAASiU,EAAQC,KAAK/W,OAAS8W,EAAQC,KAAKS,KAAK,GAAGpM,IAAM,KAC9DtJ,EAAQe,MACT,SAAUgB,EAAG+E,GACZ7G,EAAO6G,YAGT,MAAE7G,MAIhB,OADAiJ,EAAgBxD,EAAStF,GAClBsF,GAoIPyL,KAjIJ,SAAgB/Q,GACZ,IAAIwE,EAAOpF,KAEPkG,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C2E,EAAKgK,QAAQ3N,MAAK,WACd,IAAIqK,EAAS1G,EAAKqJ,QAClB3C,EAAOY,GAAG5B,aAAY,SAAUvI,GAC5B6S,EAAc7S,EAAGuJ,EAAQ,mBAAqBA,EAAOoB,UAAW,IAAI,SAAU3K,EAAGiT,GAG7E,IAFA,IAAI7D,EAAO,GAEF/T,EAAI,EAAGA,EAAI4X,EAAQC,KAAK/W,OAAQd,IACrC+T,EAAK9T,KAAK2X,EAAQC,KAAKS,KAAKtY,GAAGkM,KAGnCtJ,EAAQmR,MACT,SAAUpP,EAAG+E,GACZ7G,EAAO6G,YAGT,MAAE7G,MAIhB,OADAiJ,EAAgBxD,EAAStF,GAClBsF,GA2GP0L,aA/EJ,SAAwBzC,EAASvO,GAC7BA,EAAWsJ,EAAYxI,MAAM1B,KAAM8G,WAEnC,IAAI+K,EAAgB7R,KAAK8R,UACzB3C,EAA6B,mBAAZA,GAA0BA,GAAW,IACzCnG,OACTmG,EAAQnG,KAAOmG,EAAQnG,MAAQ6I,EAAc7I,KAC7CmG,EAAQjC,UAAYiC,EAAQjC,WAAa2E,EAAc3E,WAG3D,IACIhH,EADAd,EAAOpF,KAsDX,OADA0J,EAhDIxD,EAHCiJ,EAAQnG,KAGC,IAAIS,GAAU,SAAUjJ,GAC9B,IAAIkM,EAGAA,EAFAyC,EAAQnG,OAAS6I,EAAc7I,KAE1B5D,EAAKqJ,QAAQ/B,GAEbkD,aAAaT,EAAQnG,KAAM,GAAI,GAAI,GAGvCmG,EAAQjC,UAIT1M,EAAQ,CACJkM,GAAIA,EACJuJ,WAAY,CAAC9G,EAAQjC,aAJzB1M,EAAQwV,GAAiBtJ,OAO9BjL,MAAK,SAAU+U,GACd,OAAO,IAAI/M,GAAU,SAAUjJ,EAASC,GACpC+V,EAAc9J,GAAG5B,aAAY,SAAUvI,GACnC,SAASkU,EAAUvJ,GACf,OAAO,IAAIzD,GAAU,SAAUjJ,EAASC,GACpC8B,EAAE4S,WAAW,wBAA0BjI,EAAW,IAAI,WAClD1M,OACD,SAAU+B,EAAG+E,GACZ7G,EAAO6G,SAMnB,IADA,IAAIoP,EAAa,GACR9Y,EAAI,EAAGqH,EAAMuR,EAAcP,WAAWvX,OAAQd,EAAIqH,EAAKrH,IAC5D8Y,EAAW7Y,KAAK4Y,EAAUD,EAAcP,WAAWrY,KAGvD6L,EAAUjC,IAAIkP,GAAYjV,MAAK,WAC3BjB,OACM,OAAE,SAAUa,GAClBZ,EAAOY,SAEZ,SAAUyU,GACTrV,EAAOqV,YA5CTrM,EAAUhJ,OAAO,qBAkDNG,GAClBsF,IA4BX,SAASyQ,GAAcxH,EAASyH,GAC5B,IAAIC,EAAY1H,EAAQnG,KAAO,IAK/B,OAHImG,EAAQjC,YAAc0J,EAAc1J,YACpC2J,GAAa1H,EAAQjC,UAAY,KAE9B2J,EAqBX,SAASC,KACL,OAlBJ,WACI,IAAIC,EAAsB,4BAE1B,IAII,OAHAC,aAAarG,QAAQoG,GAAqB,GAC1CC,aAAa3F,WAAW0F,IAEjB,EACT,MAAO1V,GACL,OAAO,GASH4V,IAA+BD,aAAatY,OAAS,EA6QjE,IAAIwY,GAAsB,CACtBjI,QAAS,sBACTC,aA3QJ,SAAwBC,GACpB,IACIrD,EAAS,GACb,GAAIqD,EACA,IAAK,IAAIvR,KAAKuR,EACVrD,EAAOlO,GAAKuR,EAAQvR,GAM5B,OAFAkO,EAAO+K,UAAYF,GAAcxH,EARtBnP,KAQoCwP,gBAE1CsH,MAVM9W,KAcNyO,QAAU3C,EACfA,EAAO+J,WAAa5B,EAEbxK,EAAUjJ,WANNiJ,EAAUhJ,UAgQrBiP,SAtTJ,WACI,IACI,MAA+B,oBAAjBsH,cAAgC,YAAaA,gBAEzDA,aAAarG,QACjB,MAAOtP,GACL,OAAO,GAgTD8V,GACV/G,QAxMJ,SAAmBhI,EAAUxH,GACzB,IAAIwE,EAAOpF,KAEPkG,EAAUd,EAAKgK,QAAQ3N,MAAK,WAc5B,IAbA,IAAIqK,EAAS1G,EAAKqJ,QACdoI,EAAY/K,EAAO+K,UACnBO,EAAkBP,EAAUnY,OAC5BA,EAASsY,aAAatY,OAQtB6R,EAAkB,EAEb3S,EAAI,EAAGA,EAAIc,EAAQd,IAAK,CAC7B,IAAIkM,EAAMkN,aAAalN,IAAIlM,GAC3B,GAA+B,IAA3BkM,EAAImG,QAAQ4G,GAAhB,CAGA,IAAI7Z,EAAQga,aAAavG,QAAQ3G,GAYjC,GANI9M,IACAA,EAAQ8O,EAAO+J,WAAW3Y,YAAYF,SAK5B,KAFdA,EAAQoL,EAASpL,EAAO8M,EAAIkK,UAAUoD,GAAkB7G,MAGpD,OAAOvT,OAMnB,OADA0M,EAAgBxD,EAAStF,GAClBsF,GAgKPuK,QAlOJ,SAAmB3G,EAAKlJ,GACpB,IAAIwE,EAAOpF,KAEX8J,EAAMD,EAAaC,GAEnB,IAAI5D,EAAUd,EAAKgK,QAAQ3N,MAAK,WAC5B,IAAIqK,EAAS1G,EAAKqJ,QACdlN,EAASyV,aAAavG,QAAQ3E,EAAO+K,UAAY/M,GAUrD,OAJIvI,IACAA,EAASuK,EAAO+J,WAAW3Y,YAAYqE,IAGpCA,KAIX,OADAmI,EAAgBxD,EAAStF,GAClBsF,GA8MPyK,QAnFJ,SAAmB7G,EAAK9M,EAAO4D,GAC3B,IAAIwE,EAAOpF,KAEX8J,EAAMD,EAAaC,GAEnB,IAAI5D,EAAUd,EAAKgK,QAAQ3N,MAAK,gBAGd3C,IAAV9B,IACAA,EAAQ,MAIZ,IAAI4Y,EAAgB5Y,EAEpB,OAAO,IAAIyM,GAAU,SAAUjJ,EAASC,GACpC,IAAIqL,EAAS1G,EAAKqJ,QAClB3C,EAAO+J,WAAW5Y,UAAUD,GAAO,SAAUA,EAAOsK,GAChD,GAAIA,EACA7G,EAAO6G,QAEP,IACI0P,aAAarG,QAAQ7E,EAAO+K,UAAY/M,EAAK9M,GAC7CwD,EAAQoV,GACV,MAAOvU,GAGU,uBAAXA,EAAE2H,MAA4C,+BAAX3H,EAAE2H,MACrCvI,EAAOY,GAEXZ,EAAOY,aAQ3B,OADAqI,EAAgBxD,EAAStF,GAClBsF,GA8CPmL,WAtGJ,SAAsBvH,EAAKlJ,GACvB,IAAIwE,EAAOpF,KAEX8J,EAAMD,EAAaC,GAEnB,IAAI5D,EAAUd,EAAKgK,QAAQ3N,MAAK,WAC5B,IAAIqK,EAAS1G,EAAKqJ,QAClBuI,aAAa3F,WAAWvF,EAAO+K,UAAY/M,MAI/C,OADAJ,EAAgBxD,EAAStF,GAClBsF,GA4FPoL,MA1PJ,SAAiB1Q,GACb,IAAIwE,EAAOpF,KACPkG,EAAUd,EAAKgK,QAAQ3N,MAAK,WAG5B,IAFA,IAAIoV,EAAYzR,EAAKqJ,QAAQoI,UAEpBjZ,EAAIoZ,aAAatY,OAAS,EAAGd,GAAK,EAAGA,IAAK,CAC/C,IAAIkM,EAAMkN,aAAalN,IAAIlM,GAEI,IAA3BkM,EAAImG,QAAQ4G,IACZG,aAAa3F,WAAWvH,OAMpC,OADAJ,EAAgBxD,EAAStF,GAClBsF,GA4OPxH,OAnHJ,SAAkBkC,GACd,IACIsF,EADOlG,KACQ2R,OAAOlQ,MAAK,SAAUkQ,GACrC,OAAOA,EAAKjT,UAIhB,OADAgL,EAAgBxD,EAAStF,GAClBsF,GA6GP4D,IAjKJ,SAAetH,EAAG5B,GACd,IAAIwE,EAAOpF,KACPkG,EAAUd,EAAKgK,QAAQ3N,MAAK,WAC5B,IACIF,EADAuK,EAAS1G,EAAKqJ,QAElB,IACIlN,EAASyV,aAAalN,IAAItH,GAC5B,MAAO8E,GACL/F,EAAS,KAQb,OAJIA,IACAA,EAASA,EAAOyS,UAAUlI,EAAO+K,UAAUnY,SAGxC6C,KAIX,OADAmI,EAAgBxD,EAAStF,GAClBsF,GA8IPyL,KA3IJ,SAAgB/Q,GACZ,IAAIwE,EAAOpF,KACPkG,EAAUd,EAAKgK,QAAQ3N,MAAK,WAK5B,IAJA,IAAIqK,EAAS1G,EAAKqJ,QACd/P,EAASsY,aAAatY,OACtBiT,EAAO,GAEF/T,EAAI,EAAGA,EAAIc,EAAQd,IAAK,CAC7B,IAAIyZ,EAAUL,aAAalN,IAAIlM,GACW,IAAtCyZ,EAAQpH,QAAQnE,EAAO+K,YACvBlF,EAAK9T,KAAKwZ,EAAQrD,UAAUlI,EAAO+K,UAAUnY,SAIrD,OAAOiT,KAIX,OADAjI,EAAgBxD,EAAStF,GAClBsF,GA0HP0L,aAhDJ,SAAwBzC,EAASvO,GAI7B,GAHAA,EAAWsJ,EAAYxI,MAAM1B,KAAM8G,aAEnCqI,EAA6B,mBAAZA,GAA0BA,GAAW,IACzCnG,KAAM,CACf,IAAI6I,EAAgB7R,KAAK8R,SACzB3C,EAAQnG,KAAOmG,EAAQnG,MAAQ6I,EAAc7I,KAC7CmG,EAAQjC,UAAYiC,EAAQjC,WAAa2E,EAAc3E,UAG3D,IACIhH,EADAd,EAAOpF,KAuBX,OADA0J,EAjBIxD,EAHCiJ,EAAQnG,KAGC,IAAIS,GAAU,SAAUjJ,GACzB2O,EAAQjC,UAGT1M,EAAQmW,GAAcxH,EAAS/J,EAAKoK,iBAFpChP,EAAQ2O,EAAQnG,KAAO,QAI5BvH,MAAK,SAAUoV,GACd,IAAK,IAAIjZ,EAAIoZ,aAAatY,OAAS,EAAGd,GAAK,EAAGA,IAAK,CAC/C,IAAIkM,EAAMkN,aAAalN,IAAIlM,GAEI,IAA3BkM,EAAImG,QAAQ4G,IACZG,aAAa3F,WAAWvH,OAb1BL,EAAUhJ,OAAO,qBAmBNG,GAClBsF,IAsBPoR,GAAW,SAAkBC,EAAOC,GAGpC,IAFA,IAAIvS,EAAMsS,EAAM7Y,OACZd,EAAI,EACDA,EAAIqH,GAAK,CACZ,IAR2BwS,EAQbF,EAAM3Z,OARU8Z,EAQNF,IAPG,iBAANC,GAA+B,iBAANC,GAAkBC,MAAMF,IAAME,MAAMD,GAQ9E,OAAO,EAEX9Z,IAXQ,IAAmB6Z,EAAGC,EAclC,OAAO,GAGPE,GAAUhQ,MAAMgQ,SAAW,SAAUC,GACrC,MAA+C,mBAAxChb,OAAOwK,UAAUK,SAAS1E,KAAK6U,IAKtCC,GAAiB,GAEjBC,GAAgB,GAEhBC,GAAiB,CACjBC,UAAWjJ,EACXkJ,OAAQ/B,GACRgC,aAAcjB,IAGdkB,GAAqB,CAACJ,GAAeC,UAAUhJ,QAAS+I,GAAeE,OAAOjJ,QAAS+I,GAAeG,aAAalJ,SAEnHoJ,GAAwB,CAAC,gBAEzBC,GAAiB,CAAC,QAAS,UAAW,UAAW,MAAO,OAAQ,SAAU,aAAc,WAAWC,OAAOF,IAE1GG,GAAgB,CAChBnC,YAAa,GACboC,OAAQL,GAAmBpa,QAC3BgL,KAAM,cAGNsN,KAAM,QACNpJ,UAAW,gBACXL,QAAS,GAGb,SAAS6L,GAAcC,EAAqBC,GACxCD,EAAoBC,GAAiB,WACjC,IAAIC,EAAQ/R,UACZ,OAAO6R,EAAoBvJ,QAAQ3N,MAAK,WACpC,OAAOkX,EAAoBC,GAAelX,MAAMiX,EAAqBE,OAKjF,SAASC,KACL,IAAK,IAAIlb,EAAI,EAAGA,EAAIkJ,UAAUpI,OAAQd,IAAK,CACvC,IAAIia,EAAM/Q,UAAUlJ,GAEpB,GAAIia,EACA,IAAK,IAAIkB,KAAQlB,EACTA,EAAImB,eAAeD,KACfnB,GAAQC,EAAIkB,IACZjS,UAAU,GAAGiS,GAAQlB,EAAIkB,GAAM/a,QAE/B8I,UAAU,GAAGiS,GAAQlB,EAAIkB,IAO7C,OAAOjS,UAAU,GAGrB,IA4SImS,GAAiB,IA5SH,WACd,SAASC,EAAY/J,GAGjB,IAAK,IAAIgK,KAxmEjB,SAAyBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIxT,UAAU,qCAsmExGyT,CAAgBtZ,KAAMkZ,GAEIlB,GACtB,GAAIA,GAAegB,eAAeG,GAAgB,CAC9C,IAAIV,EAAST,GAAemB,GACxBI,EAAad,EAAOxJ,QACxBjP,KAAKmZ,GAAiBI,EAEjBzB,GAAeyB,IAIhBvZ,KAAKwZ,aAAaf,GAK9BzY,KAAKwP,eAAiBsJ,GAAO,GAAIN,IACjCxY,KAAKyZ,QAAUX,GAAO,GAAI9Y,KAAKwP,eAAgBL,GAC/CnP,KAAK0Z,WAAa,KAClB1Z,KAAK2Z,YAAc,KACnB3Z,KAAK4Z,QAAS,EACd5Z,KAAKyO,QAAU,KAEfzO,KAAK6Z,+BACL7Z,KAAK8Z,UAAU9Z,KAAKyZ,QAAQhB,QAAe,OAAE,eA0QjD,OAjQAS,EAAY7R,UAAUyK,OAAS,SAAgB3C,GAI3C,GAA0E,iBAAlD,IAAZA,EAA0B,YAAcjH,EAAQiH,IAAwB,CAGhF,GAAInP,KAAK4Z,OACL,OAAO,IAAIjc,MAAM,wDAGrB,IAAK,IAAIC,KAAKuR,EAAS,CAKnB,GAJU,cAANvR,IACAuR,EAAQvR,GAAKuR,EAAQvR,GAAGmc,QAAQ,MAAO,MAGjC,YAANnc,GAAyC,iBAAfuR,EAAQvR,GAClC,OAAO,IAAID,MAAM,sCAGrBqC,KAAKyZ,QAAQ7b,GAAKuR,EAAQvR,GAK9B,QAAI,WAAYuR,KAAWA,EAAQsJ,QACxBzY,KAAK8Z,UAAU9Z,KAAKyZ,QAAQhB,QAIpC,MAAuB,iBAAZtJ,EACPnP,KAAKyZ,QAAQtK,GAEbnP,KAAKyZ,SAQpBP,EAAY7R,UAAUmS,aAAe,SAAsBQ,EAAcpZ,EAAUgJ,GAC/E,IAAI1D,EAAU,IAAIuD,GAAU,SAAUjJ,EAASC,GAC3C,IACI,IAAI8Y,EAAaS,EAAa/K,QAC1BgL,EAAkB,IAAItc,MAAM,wFAIhC,IAAKqc,EAAa/K,QAEd,YADAxO,EAAOwZ,GAKX,IADA,IAAIC,EAAgB5B,GAAeC,OAAO,gBACjC3a,EAAI,EAAGqH,EAAMiV,EAAcxb,OAAQd,EAAIqH,EAAKrH,IAAK,CACtD,IAAIuc,EAAmBD,EAActc,GAKrC,KADkB0Z,GAASe,GAAuB8B,IAC/BH,EAAaG,KAAgE,mBAAnCH,EAAaG,GAEtE,YADA1Z,EAAOwZ,IAKe,WAU1B,IATA,IAAIG,EAA8B,SAAqCC,GACnE,OAAO,WACH,IAAI/S,EAAQ,IAAI3J,MAAM,UAAY0c,EAAa,6CAC3CnU,EAAUuD,EAAUhJ,OAAO6G,GAE/B,OADAoC,EAAgBxD,EAASY,UAAUA,UAAUpI,OAAS,IAC/CwH,IAINoU,EAAK,EAAGC,EAAOlC,GAAsB3Z,OAAQ4b,EAAKC,EAAMD,IAAM,CACnE,IAAIE,EAAuBnC,GAAsBiC,GAC5CN,EAAaQ,KACdR,EAAaQ,GAAwBJ,EAA4BI,KAK7EC,GAEA,IAAIC,EAAmB,SAA0BC,GACzC7C,GAAeyB,IACfxP,QAAQ6Q,KAAK,kCAAoCrB,GAErDzB,GAAeyB,GAAcS,EAC7BjC,GAAcwB,GAAcoB,EAI5Bna,KAGA,aAAcwZ,EACVA,EAAatK,UAA6C,mBAA1BsK,EAAatK,SAC7CsK,EAAatK,WAAWjO,KAAKiZ,EAAkBja,GAE/Cia,IAAmBV,EAAatK,UAGpCgL,GAAiB,GAEvB,MAAOrZ,GACLZ,EAAOY,OAKf,OADAsI,EAAoBzD,EAAStF,EAAUgJ,GAChC1D,GAGXgT,EAAY7R,UAAUoR,OAAS,WAC3B,OAAOzY,KAAKiP,SAAW,MAG3BiK,EAAY7R,UAAUwT,UAAY,SAAmBtB,EAAY3Y,EAAUgJ,GACvE,IAAIkR,EAAmBhD,GAAeyB,GAAc9P,EAAUjJ,QAAQsX,GAAeyB,IAAe9P,EAAUhJ,OAAO,IAAI9C,MAAM,sBAG/H,OADAgM,EAAoBmR,EAAkBla,EAAUgJ,GACzCkR,GAGX5B,EAAY7R,UAAU0T,cAAgB,SAAuBna,GACzD,IAAIoa,EAAoBvR,EAAUjJ,QAAQyT,GAE1C,OADAtK,EAAoBqR,EAAmBpa,GAChCoa,GAGX9B,EAAY7R,UAAU+H,MAAQ,SAAexO,GACzC,IAAIwE,EAAOpF,KAEPkG,EAAUd,EAAKsU,WAAWjY,MAAK,WAK/B,OAJoB,OAAhB2D,EAAKwU,SACLxU,EAAKwU,OAASxU,EAAKuU,eAGhBvU,EAAKwU,UAIhB,OADAjQ,EAAoBzD,EAAStF,EAAUA,GAChCsF,GAGXgT,EAAY7R,UAAUyS,UAAY,SAAmBmB,EAASra,EAAUgJ,GACpE,IAAIxE,EAAOpF,KAEN4X,GAAQqD,KACTA,EAAU,CAACA,IAGf,IAAIC,EAAmBlb,KAAKmb,qBAAqBF,GAEjD,SAASG,IACLhW,EAAKqU,QAAQhB,OAASrT,EAAKqT,SAG/B,SAAS4C,EAAqB5C,GAK1B,OAJArT,EAAKkW,QAAQ7C,GACb2C,IAEAhW,EAAKwU,OAASxU,EAAK8J,aAAa9J,EAAKqU,SAC9BrU,EAAKwU,OA+BhB,IAAI2B,EAAuC,OAApBvb,KAAK0Z,WAAsB1Z,KAAK0Z,WAAkB,OAAE,WACvE,OAAOjQ,EAAUjJ,aAChBiJ,EAAUjJ,UAqBf,OAnBAR,KAAK0Z,WAAa6B,EAAiB9Z,MAAK,WACpC,IAAI8X,EAAa2B,EAAiB,GAIlC,OAHA9V,EAAKqJ,QAAU,KACfrJ,EAAKwU,OAAS,KAEPxU,EAAKyV,UAAUtB,GAAY9X,MAAK,SAAUgX,GAC7CrT,EAAK6J,QAAUwJ,EAAOxJ,QACtBmM,IACAhW,EAAKyU,+BACLzU,EAAKuU,YAzCb,SAAoBuB,GAChB,OAAO,WACH,IAAIM,EAAqB,EAmBzB,OAjBA,SAASC,IACL,KAAOD,EAAqBN,EAAiBxc,QAAQ,CACjD,IAAI6a,EAAa2B,EAAiBM,GAMlC,OALAA,IAEApW,EAAKqJ,QAAU,KACfrJ,EAAKwU,OAAS,KAEPxU,EAAKyV,UAAUtB,GAAY9X,KAAK4Z,GAA6B,MAAEI,GAG1EL,IACA,IAAI9T,EAAQ,IAAI3J,MAAM,sCAEtB,OADAyH,EAAKsU,WAAajQ,EAAUhJ,OAAO6G,GAC5BlC,EAAKsU,WAGT+B,IAoBYC,CAAWR,SAE5B,OAAE,WACRE,IACA,IAAI9T,EAAQ,IAAI3J,MAAM,sCAEtB,OADAyH,EAAKsU,WAAajQ,EAAUhJ,OAAO6G,GAC5BlC,EAAKsU,cAGhB/P,EAAoB3J,KAAK0Z,WAAY9Y,EAAUgJ,GACxC5J,KAAK0Z,YAGhBR,EAAY7R,UAAUsU,SAAW,SAAkBpC,GAC/C,QAASxB,GAAcwB,IAG3BL,EAAY7R,UAAUiU,QAAU,SAAiBM,GAC7C9C,GAAO9Y,KAAM4b,IAGjB1C,EAAY7R,UAAU8T,qBAAuB,SAA8BF,GAEvE,IADA,IAAIC,EAAmB,GACdtd,EAAI,EAAGqH,EAAMgW,EAAQvc,OAAQd,EAAIqH,EAAKrH,IAAK,CAChD,IAAI2b,EAAa0B,EAAQrd,GACrBoC,KAAK2b,SAASpC,IACd2B,EAAiBrd,KAAK0b,GAG9B,OAAO2B,GAGXhC,EAAY7R,UAAUwS,6BAA+B,WAKjD,IAAK,IAAIjc,EAAI,EAAGqH,EAAMqT,GAAe5Z,OAAQd,EAAIqH,EAAKrH,IAClD8a,GAAc1Y,KAAMsY,GAAe1a,KAI3Csb,EAAY7R,UAAUwU,eAAiB,SAAwB1M,GAC3D,OAAO,IAAI+J,EAAY/J,IAGpB+J,EArSO,IA8SlB5W,EAAOvF,QAAUkc,IAEf,CAAC,EAAI,KAAK,GAAG,CAAC,GAzuFmW,CAyuF/V","file":"4511.768a862e13db1b86ce86.js","sourcesContent":["\"use strict\";\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = exports.deserialize = void 0;\n/**\n * Deserialize and return the unpacked message.\n *\n * #### Notes\n * Handles JSON blob strings and binary messages.\n */\nfunction deserialize(data) {\n    let value;\n    if (typeof data === 'string') {\n        value = JSON.parse(data);\n    }\n    else {\n        value = deserializeBinary(data);\n    }\n    return value;\n}\nexports.deserialize = deserialize;\n/**\n * Serialize a kernel message for transport.\n *\n * #### Notes\n * If there is binary content, an `ArrayBuffer` is returned,\n * otherwise the message is converted to a JSON string.\n */\nfunction serialize(msg) {\n    var _a;\n    let value;\n    if ((_a = msg.buffers) === null || _a === void 0 ? void 0 : _a.length) {\n        value = serializeBinary(msg);\n    }\n    else {\n        value = JSON.stringify(msg);\n    }\n    return value;\n}\nexports.serialize = serialize;\n/**\n * Deserialize a binary message to a Kernel Message.\n */\nfunction deserializeBinary(buf) {\n    const data = new DataView(buf);\n    // read the header: 1 + nbufs 32b integers\n    const nbufs = data.getUint32(0);\n    const offsets = [];\n    if (nbufs < 2) {\n        throw new Error('Invalid incoming Kernel Message');\n    }\n    for (let i = 1; i <= nbufs; i++) {\n        offsets.push(data.getUint32(i * 4));\n    }\n    const jsonBytes = new Uint8Array(buf.slice(offsets[0], offsets[1]));\n    const msg = JSON.parse(new TextDecoder('utf8').decode(jsonBytes));\n    // the remaining chunks are stored as DataViews in msg.buffers\n    msg.buffers = [];\n    for (let i = 1; i < nbufs; i++) {\n        const start = offsets[i];\n        const stop = offsets[i + 1] || buf.byteLength;\n        msg.buffers.push(new DataView(buf.slice(start, stop)));\n    }\n    return msg;\n}\n/**\n * Implement the binary serialization protocol.\n *\n * Serialize Kernel message to ArrayBuffer.\n */\nfunction serializeBinary(msg) {\n    const offsets = [];\n    const buffers = [];\n    const encoder = new TextEncoder();\n    let origBuffers = [];\n    if (msg.buffers !== undefined) {\n        origBuffers = msg.buffers;\n        delete msg['buffers'];\n    }\n    const jsonUtf8 = encoder.encode(JSON.stringify(msg));\n    buffers.push(jsonUtf8.buffer);\n    for (let i = 0; i < origBuffers.length; i++) {\n        // msg.buffers elements could be either views or ArrayBuffers\n        // buffers elements are ArrayBuffers\n        const b = origBuffers[i];\n        buffers.push(ArrayBuffer.isView(b) ? b.buffer : b);\n    }\n    const nbufs = buffers.length;\n    offsets.push(4 * (nbufs + 1));\n    for (let i = 0; i + 1 < buffers.length; i++) {\n        offsets.push(offsets[offsets.length - 1] + buffers[i].byteLength);\n    }\n    const msgBuf = new Uint8Array(offsets[offsets.length - 1] + buffers[buffers.length - 1].byteLength);\n    // use DataView.setUint32 for network byte-order\n    const view = new DataView(msgBuf.buffer);\n    // write nbufs to first 4 bytes\n    view.setUint32(0, nbufs);\n    // write offsets to next 4 * nbufs bytes\n    for (let i = 0; i < offsets.length; i++) {\n        view.setUint32(4 * (i + 1), offsets[i]);\n    }\n    // write all the buffers at their respective offsets\n    for (let i = 0; i < buffers.length; i++) {\n        msgBuf.set(new Uint8Array(buffers[i]), offsets[i]);\n    }\n    return msgBuf.buffer;\n}\n//# sourceMappingURL=serialize.js.map","const E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_maxConcurrency, _cancelError = E_CANCELED) {\n        this._maxConcurrency = _maxConcurrency;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        if (_maxConcurrency <= 0) {\n            throw new Error('semaphore must be initialized to a positive value');\n        }\n        this._value = _maxConcurrency;\n    }\n    acquire() {\n        const locked = this.isLocked();\n        const ticketPromise = new Promise((resolve, reject) => this._queue.push({ resolve, reject }));\n        if (!locked)\n            this._dispatch();\n        return ticketPromise;\n    }\n    runExclusive(callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [value, release] = yield this.acquire();\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n    release() {\n        if (this._maxConcurrency > 1) {\n            throw new Error('this method is unavailable on semaphores with concurrency > 1; use the scoped release returned by acquire instead');\n        }\n        if (this._currentReleaser) {\n            const releaser = this._currentReleaser;\n            this._currentReleaser = undefined;\n            releaser();\n        }\n    }\n    cancel() {\n        this._queue.forEach((ticket) => ticket.reject(this._cancelError));\n        this._queue = [];\n    }\n    _dispatch() {\n        const nextTicket = this._queue.shift();\n        if (!nextTicket)\n            return;\n        let released = false;\n        this._currentReleaser = () => {\n            if (released)\n                return;\n            released = true;\n            this._value++;\n            this._dispatch();\n        };\n        nextTicket.resolve([this._value--, this._currentReleaser]);\n    }\n}\n\nvar __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, void 0, void 0, function* () {\n            const [, releaser] = yield this._semaphore.acquire();\n            return releaser;\n        });\n    }\n    runExclusive(callback) {\n        return this._semaphore.runExclusive(() => callback());\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n    release() {\n        this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: () => new Promise((resolve, reject) => __awaiter$2(this, void 0, void 0, function* () {\n            let isTimeout = false;\n            const handle = setTimeout(() => {\n                isTimeout = true;\n                reject(timeoutError);\n            }, timeout);\n            try {\n                const ticket = yield sync.acquire();\n                if (isTimeout) {\n                    const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                    release();\n                }\n                else {\n                    clearTimeout(handle);\n                    resolve(ticket);\n                }\n            }\n            catch (e) {\n                if (!isTimeout) {\n                    clearTimeout(handle);\n                    reject(e);\n                }\n            }\n        })),\n        runExclusive(callback) {\n            return __awaiter$2(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire();\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n        release() {\n            sync.release();\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        isLocked: () => sync.isLocked(),\n    };\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\nexport { E_ALREADY_LOCKED, E_CANCELED, E_TIMEOUT, Mutex, Semaphore, tryAcquire, withTimeout };\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.9.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n"],"sourceRoot":""}